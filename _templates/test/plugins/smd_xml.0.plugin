a:11:{s:4:"name";s:7:"smd_xml";s:6:"status";s:1:"1";s:6:"author";s:11:"Stef Dawson";s:10:"author_uri";s:22:"http://stefdawson.com/";s:7:"version";s:4:"0.40";s:11:"description";s:41:"Extract any XML/feed info and reformat it";s:4:"help";s:40930:"<div id="smd_help">

	<h1>smd_xml</h1>

	<p>Yank bits out of any hunk of <span class="caps">XML</span> and reformat it to your own needs. Great for pulling feed info into your Textpattern site, for example from delicious.com.</p>

	<h2>Features</h2>

	<ul>
		<li>Specify your <span class="caps">XML</span> data from any <span class="caps">URL</span> &#8212; internal or external to <span class="caps">TXP</span> &#8212; or from a string</li>
		<li>Optionally process <span class="caps">XML</span> data using <span class="caps">XSLT</span></li>
		<li>Selectively extract any items in your record set</li>
		<li>Use a Form or the plugin container to output data you have extracted</li>
		<li><span class="caps">XML</span> tag attributes are available as well</li>
		<li>Supports pagination of results with limit/offset</li>
	</ul>

	<h2 id="author">Author</h2>

	<p><a href="http://stefdawson.com/contact">Stef Dawson</a>. For other software by me, or to make a donation, see the <a href="http://stefdawson.com/sw">software page</a>.</p>

	<h2 id="install">Installation / Uninstallation</h2>

	<p class="required">Requires <span class="caps">PHP</span> 5.2+ (and the <span class="caps">SOAP</span> extension for <span class="caps">SOAP</span> data feeds)</p>

	<p>Download the plugin from either <a href="http://textpattern.org/plugins/1138/smd_xml">textpattern.org</a>, or the software page above, paste the code into the <span class="caps">TXP</span> Admin -&gt; Plugins pane, install and enable the plugin. Visit the <a href="http://forum.textpattern.com/viewtopic.php?id=32718">forum thread</a> for more info or to report on the success or otherwise of the plugin.</p>

	<p>To remove the plugin, simply delete it from the Admin-&gt;Plugins tab.</p>

	<h2>Tag: smd_xml</h2>

	<p>Place a <code>&lt;txp:smd_xml&gt;</code> tag where you wish to process <span class="caps">XML</span> data &#8212; this could be from a feed. Since this plugin is best explained by example, assume the following <span class="caps">XML</span> document is presented to the plugin:</p>

<pre class="block"><code class="block">&lt;employees&gt;
   &lt;employee&gt;
      &lt;name id=&quot;wile_e_coyote&quot;&gt;Wile E. Coyote&lt;/name&gt;
      &lt;job_title&gt;Schemer&lt;/job_title&gt;
      &lt;dept&gt;ACME corp&lt;/dept&gt;
      &lt;quality&gt;Cunning&lt;/quality&gt;
      &lt;quality&gt;Deviousness&lt;/quality&gt;
      &lt;quality&gt;Persistence&lt;/quality&gt;
      &lt;inventions&gt;
         &lt;name&gt;ACME Rocket Sled&lt;/name&gt;
         &lt;name&gt;ACME Super Cannon&lt;/name&gt;
         &lt;name&gt;ACME Jetpack&lt;/name&gt;
      &lt;/inventions&gt;
   &lt;/employee&gt;
   &lt;employee&gt;
      &lt;name id=&quot;road_runner&quot;&gt;Road Runner&lt;/name&gt;
      &lt;job_title&gt;Seed expert&lt;/job_title&gt;
      &lt;dept&gt;Evasion&lt;/dept&gt;
      &lt;quality&gt;Speed&lt;/quality&gt;
      &lt;quality&gt;Meep meep&lt;/quality&gt;
   &lt;/employee&gt;
&lt;/employees&gt;
</code></pre>

	<p>Use the following attributes to configure the smd_xml plugin (shaded attributes are mandatory) :</p>

	<h3>Data import attributes</h3>

	<dl>
		<dt><span class="atnm mand">data</span></dt>
		<dd>The <span class="caps">XML</span> data source. Most of the time this will be a <span class="caps">URL</span>, though you could hard-code the <span class="caps">XML</span> data to use another <span class="caps">TXP</span> tag here (e.g. <code>&lt;txp:variable /&gt;</code>).</dd>
		<dt><span class="atnm mand">record</span></dt>
		<dd>The name of the <span class="caps">XML</span> tag that surrounds each record of data in your feed. Thus you would need <code>record=&quot;employee&quot;</code> in the above document.</dd>
		<dt><span class="atnm">fields</span></dt>
		<dd>List of <span class="caps">XML</span> nodes you want to extract from each record. For example, <code>fields=&quot;name, dept&quot;</code>.</dd>
		<dd>Each field you specify here will create a similarly-named <a href="#reps">replacement tag</a> that you may use in your form/container to display the relevant piece(s) of data. In this case, <code>{name}</code> and <code>{dept}</code> would be available in your output.</dd>
		<dd>You may extract multiple copies of the same field by separating the name of the field&#8217;s copy with <code>param_delim</code>. For example: <code>fields=&quot;pubDate, title|url_ttl, id, link&quot;</code> would extract title twice: once as <code>{title}</code> and again as <code>{url_ttl}</code>. See <a href="#eg6">example 6</a> for a practical application.</dd>
		<dd>Finally, you can extract specific items based on their hierarchy in the tree. For example, if you specified <code>field=&quot;name&quot;</code> on the above document you would retrieve the concatenation of the employee and invention &#8216;name&#8217; nodes. If you wanted to only extract the names of the inventions, you would specify <code>field=&quot;inventions-&gt;name&quot;</code>. Similarly, if you only wanted the employee name you would use <code>field=&quot;employee-&gt;name&quot;</code>. Chain nodes together with as many <code>-&gt;</code> connectors as necessary to suit your <span class="caps">XML</span> stream.</dd>
		<dt><span class="atnm">datawrap</span></dt>
		<dd>Sometimes the incoming <span class="caps">XML</span> document is just a series of records without any container. This can cause the plugin to get confused under certain circumstances. If you find this happening, use this attribute to manually wrap your data in the given <span class="caps">XML</span> tag. e.g. <code>datawrap=&quot;my_records&quot;</code> would wrap the data stream with <code>&lt;my_records&gt; ... &lt;/my_records&gt;</code> tags.</dd>
		<dd>This attribute is also used as the default <span class="caps">SOAP</span> wrapper.</dd>
		<dt><span class="atnm">load_atts</span></dt>
		<dd>When field attributes are detected they can be made available either when the start tag is encountered, or when the corresponding end tag is found. Options:
	<dl>
		<dd><strong>start</strong></dd>
		<dd><strong>end</strong></dd>
	</dl></dd>
		<dd>Default: <code>start</code></dd>
		<dt><span class="atnm">match</span></dt>
		<dd>Consider nodes if its data matches this given regular expression. Specify as many matches as you like, each separated by <code>delim</code>. A match must comprise two elements:
	<dl>
		<dd>The tag name to consider.</dd>
		<dd>The full regular expression (including delimiters) to compare the data in that tag against.</dd>
	</dl></dd>
		<dt><span class="atnm">skip</span></dt>
		<dd>List of <span class="caps">XML</span> nodes you want to skip over in each record. Useful if a field you wish to extract is used in two places in the same record. See <a href="#eg2">example 2</a> for a practical application.</dd>
		<dt><span class="atnm">defaults</span></dt>
		<dd>List of default values you wish to set if any <code>fields</code> are not set in your document. Specify defaults in pairs of entries like this: <code>defaults=&quot;field|default, field|default, ...&quot;</code>.</dd>
		<dd>The pipe can be altered with <code>param_delim</code>.</dd>
		<dt><span class="atnm">set_empty</span></dt>
		<dd>Any fields that are not set in your document will normally mean that you&#8217;ll see the raw <code>{replacement tag}</code> in your output. Use <code>set_empty=&quot;1&quot;</code> to ensure that all empty nodes are set to an empty value. Any <code>defaults</code> you specify will take precedence over empties.</dd>
		<dt><span class="atnm">cache_time</span></dt>
		<dd>If set, the <span class="caps">XML</span> document is cached in the <span class="caps">TXP</span> prefs. Subsequent calls to smd_xml (e.g. refreshing the page) will read the cached information instead of hitting the <code>data</code> <span class="caps">URL</span>, thus cutting down on network traffic.</dd>
		<dd>After <code>cache_time</code> (specified in seconds) has elapsed, the next page refresh will cause the document to be fetched from the <code>data</code> <span class="caps">URL</span> again. You may, however, force a refresh from the data <span class="caps">URL</span> at any time by adding <code>&amp;force_read=1</code> to the browser <span class="caps">URL</span> (you can use smd_prefalizer and search for &#8216;smd_xml&#8217; to find the cached documents &#8212; each is referenced by its unique ID)</dd>
	</dl>

	<h3>Manipulation attributes</h3>

	<dl>
		<dt><strong>kill_spaces</strong></dt>
		<dd>Remove all inter-tag whitespace, newlines and tabs, i.e. redundant spaces surrounding the tags in the stream. It does not touch spaces within nodes.</dd>
		<dd>Although optional, this attribute is <strong>highly</strong> recommended as it has the side effect of usually speeding up the parsing process. It does, however, make the feed very difficult to read as it squishes it all up on one line. So consider turning this off if you are debugging. Options:
	<dl>
		<dd>0: no, keep inter-tag spaces in the feed</dd>
		<dd>1: yes, remove them</dd>
	</dl></dd>
		<dd>Default: 1</dd>
		<dt><span class="atnm">transform</span></dt>
		<dd>Perform tranformations to the raw data stream. The transformations occur prior to the data being cached so the results are cached as well. Specify as many transformations as you like, each separated by <code>delim</code>. Each transformation is broken down into a class (type) and a list of parameters for that class, all separated by <code>param_delim</code>. You can choose from the following classes of transform:
	<dl>
		<dd><strong>xsl</strong>: the second parameter is the <span class="caps">URL</span> of the <span class="caps">XSL</span> stylesheet to fetch, e.g. <code>transform=&quot;xsl|http://site.com/path/to/stylesheet.xslt&quot;</code>.</dd>
		<dd><strong>replace</strong>: swap portions of the document that match the (full, including delimiters) regular expression given in the second parameter with the value given in the third. If the third parameter is omitted, the matching content is removed. e.g. <code>transform=&quot;replace|%&lt;xs:schema.+?&lt;\/xs:schema&gt;%&quot;</code>.</dd>
	</dl></dd>
		<dt><span class="atnm">format</span></dt>
		<dd>Alter the format of this list of fields. For each field, specify items separated by <code>param_delim</code>: The first is the name of the field you want to alter; The 2nd is the type of alteration required; The 3rd|4th|5th|.. specify how you want to alter the data. The following data types are supported:
	<dl>
		<dd><span class="atnm">case</span> : alter the case of the field. The items may be cumulative. Choose from four options as the third, fourth, etc parameters:
	<dl>
		<dd><strong>upper</strong></dd>
		<dd><strong>lower</strong></dd>
		<dd><strong>ucfirst</strong></dd>
		<dd><strong>ucwords</strong></dd>
	</dl></dd>
		<dd>Example: to first convert the field to lower case then convert the first letter of each word to upper case, use <code>format=&quot;Country|case|lower|ucwords&quot;</code></dd>
		<dd><span class="atnm">date</span> : takes one argument; the format string as detailed in <a href="http://php.net/manual/en/function.strftime.php">strftime</a>. Example: <code>format=&quot;pubDate|date|%d %B %Y %H:%I:%S&quot;</code> would reformat the pubDate field. Can also be used to reformat time strings.</dd>
		<dd><span class="atnm">escape</span> : escape the field so special characters are encoded as their <span class="caps">HTML</span> entity values. Options:
	<dl>
		<dd><strong>double_quotes</strong>: encode only double quotes (default)</dd>
		<dd><strong>all_quotes</strong>: encode both double and single quotes</dd>
		<dd><strong>no_quotes</strong>: don&#8217;t encode any double or single quotes</dd>
	</dl></dd>
		<dd><span class="atnm">fordb</span> : harden the field so it can be used in an <span class="caps">SQL</span> statement.</dd>
		<dd><span class="atnm">link</span> : convert the <span class="caps">URL</span> in this field to an <span class="caps">HTML</span> anchor hyperlink. Example: <code>format=&quot;cat_url|link&quot;</code> (replaces the <code>linkify</code> attribute from the v0.2x plugin versions).</dd>
		<dd><span class="atnm">sanitize</span> : convert the field into one of three &#8216;dumed down&#8217; formats, as specified by the third parameter. Choose from:
	<dl>
		<dd><strong>url</strong> for creating simple, valid <span class="caps">URL</span> strings</dd>
		<dd><strong>file</strong> for creating valid file names</dd>
		<dd><strong>url_title</strong> for making <span class="caps">TXP</span>-style <span class="caps">URL</span> titles as governed by your prefs settings</dd>
	</dl></dd>
		<dd>Example: <code>format=&quot;Title|sanitize|url&quot;</code> to sanitize the Title field suitable for use in a web address</dd>
	</dl></dd>
		<dd><span class="caps">NOTE</span>: format only applies to the form/container content. It is <span class="caps">NOT</span> applicable in <code>ontag</code> Forms. If you wish to apply formatting to ontag attributes, or perform more complicated transformations, consider the smd_wrap plugin.</dd>
		<dt><span class="atnm">target_enc</span></dt>
		<dd>Character encoding to apply to the parsed <span class="caps">XML</span> data. Choose from:
	<dl>
		<dd><strong><span class="caps">ISO</span>-8859-1</strong></dd>
		<dd><strong>US-<span class="caps">ASCII</span></strong></dd>
		<dd><strong><span class="caps">UTF</span>-8</strong></dd>
	</dl></dd>
		<dd>Default: <code>UTF-8</code>.</dd>
		<dt><span class="atnm">uppercase</span></dt>
		<dd>Set to 1 to force all <span class="caps">XML</span> tag names to be in upper case, thus you would have to specify <code>fields=&quot;NAME, DEPT&quot;</code> in order to successfully extract those fields.</dd>
		<dt><span class="atnm">concat</span></dt>
		<dd>Any duplicate nodes in the stream are usually concatenated together. If you wish to turn this feature off so that only the last tag&#8217;s content remains, set <code>concat=&quot;0&quot;</code>.</dd>
		<dd>Default: 1</dd>
		<dt><span class="atnm">convert</span></dt>
		<dd>If your data stream contains data you don&#8217;t want or data that you wish to translate (for example, character entities) you can list them here.</dd>
		<dd>Items are specified in pairs separated by <code>param_delim</code>; the first is the item to search for and the second is its replacement.</dd>
		<dd>For example: <code>convert=&quot;&amp;amp;#039|&#39;&quot;</code> would replace all occurrences of <code>&amp;amp;#039</code> with an apostrophe character. Note that the replacements are performed on the raw stream <em>before</em> it is parsed and <em>after</em> it is cached. Also take care when decoding double quotes; this is the correct method: <code>convert=&quot;&amp;amp;quot;|&quot;&quot;&quot;</code> (note the double quote is escaped by putting <em>two</em> double quote characters in)</dd>
	</dl>

	<h3>Forms and paging attributes</h3>

	<dl>
		<dt><span class="atnm">form</span></dt>
		<dd>The Txp Form with which to parse each record. You may use the plugin as a container instead if you prefer.</dd>
		<dt><span class="atnm">pageform</span></dt>
		<dd>Optional Txp form used to specify the layout of any paging navigation and statistics such as page number, quantity of records per page, total number of records, etc. See <a href="#pgreps">paging replacement tags</a>.</dd>
		<dt><span class="atnm">pagepos</span></dt>
		<dd>The position of the paging information. Options are <code>below</code> (the default), <code>above</code>, or both of them separated by <code>delim</code>.</dd>
		<dt><span class="atnm">limit</span></dt>
		<dd>Show this many records per page. Setting a <code>limit</code> smaller than the total number of records switches paging on automatically so you can use the <code>&lt;txp:older /&gt;</code> and <code>&lt;txp:newer /&gt;</code> tags inside your <code>pageform</code> to step through each page of results.</dd>
		<dd>You may also construct your own paging (see <a href="#eg3">example 3</a>)</dd>
		<dt><span class="atnm">offset</span></dt>
		<dd>Skip this many records before outputting the results.</dd>
		<dd>If you specify a negative <code>offset</code> you start that many records from the end of the document</dd>
		<dt><span class="atnm">pagevar</span></dt>
		<dd>If you are putting smd_xml on the same page as a standard article list, the built-in newer and older tags will clash with those of smd_xml; clicking next/prev will step through both your result set and your article list.</dd>
		<dd>Specify a different variable name here so the two lists can be navigated independently, e.g. <code>pagevar=&quot;xpage&quot;</code>.</dd>
		<dd>Note that if you change this, you will have to generate your own custom newer/older links (see <a href="#eg4">example 4</a>) and the <a href="#smd_xif">conditional tags</a>.</dd>
		<dd>There is also a special value <code>SMD_XML_UNIQUE_ID</code> which assigns the tags&#8217; unique ID as the paging variable. See <a href="#eg5">example 5</a> for more.</dd>
		<dd>Default: <code>pg</code>.</dd>
		<dt><span class="atnm">ontagstart / ontagend</span></dt>
		<dd>Under normal operation, each time the plugin encounters a node that matches one of your <code>fields</code> it is extracted and the output stored for display <em>at the end of processing the entire document</em>. Sometimes you might wish to output information on-the-fly as the document is read. This is where <code>ontagstart</code> and its companion <code>ontagend</code> can help.</dd>
		<dd>Specify as many ontag items as you like, each separated by a comma. Within each ontag item you first specify the name of a Txp Form that will determine what to do or display when the tag is encountered. The remaining items (each separated by <code>param_delim</code>) are the tag names to &#8220;watch&#8221;.</dd>
		<dd>Whenever one of the given tags is encountered (start of node or end of node depending on which ontag you have chosen) control is immediately passed to the relevant Form.</dd>
		<dd>Note that you may not use the node&#8217;s data <code>{replacement}</code> value unless using <code>ontagend</code> (because its value has not been discovered at tag start!) You may, however, use any attribute values if you have set <code>load_atts=&quot;start&quot;</code>.</dd>
		<dd>You canot use the <code>format</code> attribute in your ontag Forms: consider the smd_wrap plugin if you need additional processing.</dd>
	</dl>

	<h4>Tag/class/formatting attributes</h4>

	<dl>
		<dt><span class="atnm">wraptag</span></dt>
		<dd>The <span class="caps">HTML</span> tag, without brackets, to surround each record you output.</dd>
		<dt><span class="atnm">break</span></dt>
		<dd>The <span class="caps">HTML</span> tag, without brackets, to surround each field you output.</dd>
		<dt><span class="atnm">class</span></dt>
		<dd>The <span class="caps">CSS</span> class name to apply to the <code>wraptag</code>.</dd>
	</dl>

	<h4>Plugin customisation</h4>

	<dl>
		<dt><span class="atnm">delim</span></dt>
		<dd>The delimiter to use between items in the plugin attributes.<br />
Default: <code>,</code> (comma).</dd>
		<dt><span class="atnm">param_delim</span></dt>
		<dd>The delimiter to use between items in <span class="caps">XML</span> and plugin data attributes.</dd>
		<dd>Default: <code>|</code> (pipe).</dd>
		<dt><span class="atnm">concat_delim</span></dt>
		<dd>The delimiter to use between identically-named tags in the <span class="caps">XML</span> data stream.<br />
Default: <code> </code> (space).</dd>
		<dt><span class="atnm">var_prefix</span></dt>
		<dd>If you wish to embed an smd_xml tag inside the container of another, the replacement and paging variables might clash. Use this in one of your tags to help prevent this.</dd>
		<dd>It takes up to two values separated by a comma: the first is the prefix to apply to regular replacement tags; the second is the prefix to apply to page-based replacement tags.</dd>
		<dd>If only one value is specifed, the same prefix will be applied to both tag and page replacements.</dd>
		<dd>Default: <code>, smd_xml_</code> (i.e. no tag prefix, and <code>smd_xml_</code> page prefix)</dd>
		<dt><span class="atnm">timeout</span></dt>
		<dd>The time in seconds to wait for the remote server to respond before giving up.</dd>
		<dd>Default: 10</dd>
		<dt><span class="atnm">transport</span></dt>
		<dd>(should not be needed) If you would like to force the plugin to use a particular <span class="caps">HTTP</span> transport mechanism to fetch your <code>data</code> you can specify it here. Choose from:
	<dl>
		<dd><strong>fsock</strong></dd>
		<dd><strong>curl</strong></dd>
		<dd><strong>soap</strong></dd>
	</dl></dd>
		<dd>The <code>soap</code> mechanism uses <span class="caps">CURL</span> internally so you must have that available.</dd>
		<dd>Default: <code>fsock</code>.</dd>
		<dt><span class="atnm">transport_opts</span></dt>
		<dd>When using <code>soap</code> transport you often need to pass additional parameters to the <span class="caps">SOAP</span> server. <code>transport_opts</code> takes up to three paramaters, separated by <code>delim</code>:
	<dl>
		<dd>Client method: the name of a <span class="caps">SOAP</span> method to call</dd>
		<dd>Data: a series of name-val pairs (separated by <code>param_delim</code>) or an <span class="caps">XML</span> document which will be passed to the client method. e.g. <code>type|table|user|Bloke|pass|wilecoyote</code> passes three params (type, user, and pass) with corresponding values. Note that if you want to use <span class="caps">XML</span> here you need to declare your intention using the <code>transport_config</code> attribute.</dd>
		<dd>Result method: the name of a <span class="caps">SOAP</span> method to fetch the output. The first <code>param_delim</code> option is the method name to call to obtain the result set, and the second is the portion of the results you want returned (e.g. <code>any</code>)</dd>
	</dl></dd>
		<dt><span class="atnm">transport_config</span></dt>
		<dd>Allows you to configure how the plugin interacts with the server. The following configuration parameters are available; separate each configuration item from its predecessor using <code>delim</code> and separate any value from its parameter name using <code>param_delim</code> :
	<dl>
		<dd><strong>soap_wrap</strong> : the data you pass to the <span class="caps">SOAP</span> server may not be encapsulated in its own unique element. If that&#8217;s the case and the server requires this, you can specify the wrapper here. For example, some servers require <code>soap_wrap|Request</code>.</dd>
		<dd><strong>soap_delim</strong> : when retrieving multiple <span class="caps">SOAP</span> items, they will be concatenated together using this delimiter. Default: the same delimiter as set in <code>param_delim</code>.</dd>
		<dd><strong>soap_type_input</strong> : can be either <code>nvpairs</code> (the default, as shown above) or <code>xml</code> if you are passing in a complete <span class="caps">XML</span> document to configure the <span class="caps">SOAP</span> server. When using xml input format, the plugin automatically converts the given <span class="caps">XML</span> document into a <span class="caps">SOAP</span> array.</dd>
		<dd><strong>soap_type_output</strong> : <span class="caps">SOAP</span> data is normally returned as an <span class="caps">XML</span> document, but if for some reason the server sends back a raw <span class="caps">SOAP</span> array you can use this with an <code>xml</code> parameter to ask the plugin to try and interpret the <span class="caps">SOAP</span> data into an <span class="caps">XML</span> stream for you. The success of this operation is duty bound by how well formed the resulting data is. If using this you may (probably will) also need to specify <code>soap_numeric_wrap</code>.</dd>
		<dd><strong>soap_numeric_wrap</strong> : when converting a <span class="caps">SOAP</span> array back to <span class="caps">XML</span>, any repeating records are normally indexed starting from 0. Since raw numbers are invalid <span class="caps">XML</span> tag names they need to be altered somehow. By default, this is done by taking the parent class and appending a sequential number to it. If you wish to set any numeric records to a specific wrapper element, specify that element here.</dd>
	</dl></dd>
		<dt><span class="atnm">line_length</span></dt>
		<dd>If you are using the <code>fsock</code> transport mechanism, the plugin grabs the <span class="caps">XML</span> document line by line and uses a maximum line length of 8192 characters by default. This is usually good enough because most feeds contain newlines, but some (e.g. Google Spreadsheet) don&#8217;t have any newlines in them.</dd>
		<dd>To successfully parse such documents you may need to increase the line length. In these situations, however, it is highly recommended to switch to <code>transport=&quot;curl&quot;</code> instead (if you can) because it does not have any line length restrictions.</dd>
		<dt><span class="atnm">hashsize</span></dt>
		<dd>(should not be needed) When specifying a <code>cache_time</code> the plugin assigns a 32-character, unique reference to the current smd_xml based on your import attributes. <code>hashsize</code> governs the mechanism for making this long reference shorter.</dd>
		<dd>It comprises two numbers separated by a colon; the first is the length of the uniqe ID, the second is how many characters to skip past each time a character is chosen. For example, if the unique_reference was <code>0cf285879bf9d6b812539eb748fbc8f6</code> then <code>hashsize=&quot;6:5&quot;</code> would make a 6-character unique ID using every 5th character; in other words <code>05f898</code>. If at any time, you &#8220;fall off&#8221; the end of the long string, the plugin wraps back to the beginning of the string and continues counting.<br />
Default: <code>6:5</code>.</dd>
	</dl>

	<h3 id="reps">Replacement tags</h3>

	<p>Each <span class="caps">XML</span> field you extract from your data stream has an equivalently-named replacement tag available so you may use it anywhere you like in your Form/container. Although the examples here don&#8217;t demonstrate this, the replacement names will be prefixed by whatever you have set in your <code>var_prefix</code> attribute.</p>

	<p>If you chose to extract <code>fields=&quot;name, job_title, quality&quot;</code> you would have the following replacement tags available during the first record:</p>

	<ul>
		<li><code>{name}</code> : Wile E. Coyote (+ the names of the Inventions)</li>
		<li><code>{name|id}</code> : wile_e_coyote</li>
		<li><code>{job_title}</code> : Schemer</li>
		<li><code>{quality}</code> : Cunning Deviousness Persistence</li>
	</ul>

	<p>And during the second record, the same replacement tag names would refer to the following items:</p>

	<ul>
		<li><code>{name}</code> : Road Runner</li>
		<li><code>{name|id}</code> : road_runner</li>
		<li><code>{job_title}</code> : Seed expert</li>
		<li><code>{quality}</code> : Speed Meep meep</li>
	</ul>

	<p>Note that the attribute called <code>id</code> that is part of the <code>&lt;name&gt;</code> <span class="caps">XML</span> tag has been extracted and is made available automatically. By default, the names of attributes are defined as <code>{tag|attribute}</code>. The pipe can be altered using <code>param_delim</code>.</p>

	<p>The <code>{quality}</code> tag appears more than once in the example document above and is thus concatenated by default. You can influence its output using the <code>concat</code> and <code>concat_delim</code> attributes, e.g. using <code>concat_delim=&quot;|&quot;</code> would render the following replacement variable on the first record:</p>

	<ul>
		<li><code>{quality}</code> : Cunning|Deviousness|Persistence</li>
	</ul>

	<p>while <code>concat=&quot;0&quot;</code> would render this (i.e. the value of the last node encountered):</p>

	<ul>
		<li><code>{quality}</code> : Persistence</li>
	</ul>

	<p>There are also some special statistical tags available in each record:</p>

	<ul>
		<li><code>{smd_xml_totalrecs}</code> : the total number of records found in your <span class="caps">XML</span> document</li>
		<li><code>{smd_xml_pagerecs}</code> : the number of records on this page (if not using paging, this is the same as above)</li>
		<li><code>{smd_xml_pages}</code> : the number of available pages</li>
		<li><code>{smd_xml_thispage}</code> : the page number of the currently visible page</li>
		<li><code>{smd_xml_thisrec}</code> : the record number, starting at 1</li>
		<li><code>{smd_xml_thisindex}</code> : the record number, starting at 0</li>
		<li><code>{smd_xml_runrec}</code> : the record number, starting at 1 and including any offset</li>
		<li><code>{smd_xml_runindex}</code> : the record number, starting at 0 and including any offset</li>
	</ul>

	<h3 id="pgreps">Paging replacement tags</h3>

	<p>In your <code>pageform</code> you can employ any of the following replacement tags to build up a navigation system for stepping through your <span class="caps">XML</span> document. Note that they all show <code>smd_xml_</code> as the prefix here, but that may be changed with the <code>var_prefix</code> attribute:</p>

	<ul>
		<li><code>{smd_xml_totalrecs}</code> : the total number of records found in your <span class="caps">XML</span> document</li>
		<li><code>{smd_xml_pagerecs}</code> : the number of records on this page</li>
		<li><code>{smd_xml_pages}</code> : the number of available pages</li>
		<li><code>{smd_xml_prevpage}</code> : the page number of the previous page &#8212; empty if on first page</li>
		<li><code>{smd_xml_thispage}</code> : the page number of the current page</li>
		<li><code>{smd_xml_nextpage}</code> : the page number of the next page &#8212; empty if on last page</li>
		<li><code>{smd_xml_rec_start}</code> : the record number of the first record on this page (counted from the start of the record set)</li>
		<li><code>{smd_xml_rec_end}</code> : the record number of the last record on this page (counted from the start of the record set)</li>
		<li><code>{smd_xml_recs_prev}</code> : the number of records on the previous page</li>
		<li><code>{smd_xml_recs_next}</code> : the number of records on the next page</li>
		<li><code>{smd_xml_unique_id}</code> : the unique reference number assigned to this smd_xml tag (see <a href="#eg5">example 5</a> for usage of this)</li>
	</ul>

	<h2 id="smd_xif">Tags: <code>&lt;txp:smd_xml_if_prev&gt;</code> / <code>&lt;txp:smd_xml_if_next&gt;</code></h2>

	<p>Use these container tags to determine if there is a next or previous page and take action if so. Can only be used inside <code>pageform</code>, thus all <a href="#pgreps">paging replacement variables</a> are available inside these tags.</p>

<pre class="block"><code class="block">&lt;txp:smd_xml_if_prev&gt;Previous page&lt;/txp:smd_xml_if_prev&gt;
&lt;txp:smd_xml_if_next&gt;Next page&lt;/txp:smd_xml_if_next&gt;
</code></pre>

	<p>The tags supprt <code>&lt;txp:else /&gt;</code>. See <a href="#eg5">example 5</a> for more.</p>

	<h2>Examples</h2>

	<h3 id="eg1">Example 1: delicious links</h3>

	<p>Swap <code>roadrunner</code> in this code with your delicious username to get your own feed:</p>

<pre class="block"><code class="block">&lt;txp:smd_xml data=&quot;http://feeds.delicious.com/v2/rss/roadrunner&quot;
     record=&quot;item&quot; fields=&quot;title, link, pubDate, description&quot;
     wraptag=&quot;dl&quot;&gt;
   &lt;dt&gt;&lt;a href=&quot;{link}&quot;&gt;{title}&lt;/a&gt;&lt;/dt&gt;
   &lt;dd&gt;Posted: {pubDate}&lt;br /&gt;{description}&lt;/dd&gt;
&lt;/txp:smd_xml&gt;
</code></pre>

	<h3 id="eg2">Example 2: twitter feed</h3>

<pre class="block"><code class="block">&lt;txp:smd_xml
     data=&quot;http://twitter.com/statuses/user_timeline/textpattern.xml&quot;
     record=&quot;status&quot; fields=&quot;id, text, created_at&quot; skip=&quot;user&quot;
     wraptag=&quot;ul&quot; format=&quot;text|link&quot;&gt;
   &lt;li&gt;
      &lt;a href=&quot;http://twitter.com/textpattern/statuses/{id}&quot;&gt;
         {created_at}
      &lt;/a&gt;
      &lt;br /&gt;{text}
   &lt;/li&gt;
&lt;/txp:smd_xml&gt;
</code></pre>

	<p>Notice that we <code>skip</code> the whole <em>user</em> block in the <span class="caps">XML</span> data stream. This is for two reasons:</p>

	<ol>
		<li>it is redundant information that appears in every record &#8212; we already know to which user the feed belongs because they&#8217;re all from the same user</li>
		<li><em>created_at</em> is used inside the user block as well as in the outer status block so we get two datestamps, which is not what we want (if we simply used <code>concat=&quot;0&quot;</code> to only grab one of the created_at entries, the last one would prevail &#8212; the one from the user block)</li>
	</ol>

	<h3 id="eg3">Example 3: limit and paging</h3>

	<p>Viewing the I Love <span class="caps">TXP</span> feed 3 records at a time. Note that since the site is not updated frequently, the cache_time of 86400 seconds (1 day) is ample to avoid hammering the network:</p>

<pre class="block"><code class="block">&lt;txp:smd_xml
     data=&quot;http://feeds.feedburner.com/welovetxp&quot;
     record=&quot;item&quot; fields=&quot;title,description, link, pubDate&quot;
     wraptag=&quot;ul&quot; limit=&quot;3&quot; pageform=&quot;pager&quot;
     cache_time=&quot;86400&quot;&gt;
   &lt;li&gt;
      &lt;a href=&quot;{link}&quot;&gt;
         {title}
      &lt;/a&gt;&lt;span class=&quot;published&quot;&gt;{pubDate}&lt;/span&gt;
      &lt;br /&gt;{description}
   &lt;/li&gt;
&lt;/txp:smd_xml&gt;
</code></pre>

	<p>And in form <code>pager</code>:</p>

<pre class="block"><code class="block">Page {smd_xml_thispage} of {smd_xml_pages}
&lt;txp:newer&gt;Previous page&lt;/txp:newer&gt;
&lt;txp:older&gt;Next page&lt;/txp:older&gt;
</code></pre>

	<p>If you wanted to view the last three entries in the feed instead of the first three, you could set <code>offset=&quot;-3&quot;</code>.</p>

	<h3 id="eg4">Example 4: using <code>pagevar</code></h3>

	<p>Adding <code>pagevar=&quot;xmlpg&quot;</code> to example 3 allows paging independently of txp:older and txp:newer tags. You then need to build your own links in your <code>pager</code> form, like this:</p>

<pre class="block"><code class="block">Page {smd_xml_thispage} of {smd_xml_pages} |
   Showing records {smd_xml_rec_start} to {smd_xml_rec_end}
   of {smd_xml_totalrecs} |
  &lt;a href=&quot;?xmlpg={smd_xml_prevpage}&quot;&gt;Previous {smd_xml_recs_prev}&lt;/a&gt;
  &lt;a href=&quot;?xmlpg={smd_xml_nextpage}&quot;&gt;Next {smd_xml_recs_next}&lt;/a&gt;
</code></pre>

	<p>That creates links to next and previous record sets using the assigned <code>pagevar</code> as the <span class="caps">URL</span> parameter.</p>

	<h3 id="eg5">Example 5: conditional navigation and the unique ID</h3>

	<p>Again using example 3, if you used <code>pagevar=&quot;SMD_XML_UNIQUE_ID&quot;</code> the pagevar would be assigned the value <code>f290b8</code>. In this case we could use it like this:</p>

<pre class="block"><code class="block">Page {smd_xml_thispage} of {smd_xml_pages} |
   Showing records {smd_xml_rec_start} to {smd_xml_rec_end}
   of {smd_xml_totalrecs} |
&lt;txp:smd_xml_if_prev&gt;
  &lt;a href=&quot;?{smd_xml_unique_id}={smd_xml_prevpage}&quot;&gt;Previous {smd_xml_recs_prev}&lt;/a&gt;
&lt;/txp:smd_xml_if_prev&gt;
&lt;txp:smd_xml_if_next&gt;
  &lt;a href=&quot;?{smd_xml_unique_id}={smd_xml_nextpage}&quot;&gt;Next {smd_xml_recs_next}&lt;/a&gt;
&lt;/txp:smd_xml_if_next&gt;
</code></pre>

	<p>Note that we are using the conditional tags to only display the next and previous links if the next/prev page exists and also that the <span class="caps">URL</span> link is generated using <code>{smd_xml_unique_id}</code>. You could conceivably use this same pageform on more than one <span class="caps">XML</span> feed on the same page and navigate the two feeds indpendently, though you would have to work out a clever way of amalgamating the <span class="caps">URL</span> vars (perhaps using the adi_gps plugin).</p>

	<h3 id="eg6">Example 6: inserting <span class="caps">XML</span> data into <span class="caps">TXP</span></h3>

<pre class="block"><code class="block">&lt;txp:smd_xml data=&quot;http://feeds.delicious.com/v2/rss/roadrunner&quot;
     record=&quot;item&quot; fields=&quot;title|utitle, link, pubDate, description, category&quot;
     format=&quot;pubDate|date|%Y-%m-%d %H:%I:%S,
     description|fordb, title|fordb, utitle|sanitize|url_title&quot;&gt;
   &lt;txp:smd_query query=&quot;INSERT INTO textpattern
     SET Posted=&#39;{pubDate}&#39;, LastMod=NOW(),
     url_title=&#39;{utitle}&#39;,
     Title=&#39;{title}&#39;, custom_3=&#39;{link}&#39;,
     Body=&#39;{description}&#39;, Body_html=&#39;{description}&#39;,
     Section=&#39;links&#39;, Category1=&#39;delicious&#39;,
     keywords=&#39;{category}&#39;&quot; /&gt;
&lt;/txp:smd_xml&gt;
</code></pre>

	<p>This example takes a delicious feed, reformats the various entries and inserts them into the textpattern table in a dedicated section. Note that the date format is altered and the feed&#8217;s title is converted to a sanitized <span class="caps">TXP</span> <span class="caps">URL</span> suitable for the url_title field.</p>

	<h2>Credits</h2>

	<p>This plugin would not have been possible without the tireless help from those community members willing to test my flaky beta code as I strive to make the plugin work across as many types of feed as possible. Special mentions, in no particular order, go to oliverker, aslsw66, tye, jakob, Mats, and Destry.</p>

	<h2 class="changelog">Changelog</h2>

	<ul>
		<li>02 Jan 2010 | 0.10 | Initial release</li>
		<li>03 Jan 2010 | 0.20 | Added cache support (thanks variaas) ; added <code>limit</code>, <code>offset</code> and paging features ; added <code>linkify</code> (thanks Jaro)</li>
		<li>05 Jan 2010 | 0.21 | Supports https:// feeds (thanks photonomad) ; added <code>transport</code>, <code>defaults</code> and <code>set_empty</code> attributes</li>
		<li>13 Jan 2010 | 0.22 | Added <code>line_length</code> (thanks nardo)</li>
		<li>17 Jan 2010 | 0.30 | Enabled <span class="caps">URL</span> params to be passed in the <code>data</code> attribute ; added <code>format</code> ; deprecated <code>linkify</code> ; <code>param_delim</code> default is now pipe</li>
		<li>03 Apr 2012 | 0.40 | Improved feed support and tag detection for more varied / complicated feeds ; added <span class="caps">XML</span>-over-<span class="caps">FTP</span> support (thanks aslsw66) ; added <span class="caps">SOAP</span> transport facility, <code>transport_opts</code> and <code>transport_config</code> attributes ; added <span class="caps">XSL</span> and regex transform support ; allowed <code>sub-&gt;field</code> support and added <code>match</code>, <code>ontagstart</code>, <code>ontagend</code> and <code>load_atts</code> for finer control over field extraction ; added <code>datawrap</code>, <code>var_prefix</code> and <code>timeout</code> attributes ; added record attribute support (thanks Mats) ; fixed mangled date field bug ; fixed attributes-in-record-entry limit bug and undesired ontag output (both thanks tye) ; changed <code>format</code>&#8217;s <code>escape</code> attribute to <code>fordb</code> (<code>escape</code> is now for <code>htmlspecialchars()</code>) ; added <code>kill_spaces</code> so inter-tag whitespace removal is optional (but highly recommended) ; added <code>tag_delim</code> (thanks MattD)</li>
	</ul>

</div>
<!-- *** BEGIN PLUGIN CSS *** -->
<style type="text/css">
#smd_help { line-height:1.5 ;}
#smd_help code { font-weight:bold; font: 105%/130% "Courier New", courier, monospace; background-color: #f0e68c; color:#333; }
#smd_help code.block { font-weight:normal; border:1px dotted #999; display:block; margin:10px 10px 20px; padding:10px; }
#smd_help h1 { font: 22px Georgia, serif; margin: 0; text-align: center; }
#smd_help h2 { border-bottom: 1px solid black; padding:10px 0 0; font: 18px Georgia, serif; }
#smd_help h3 { font: bold 13px Georgia, serif; letter-spacing: 1px; margin: 20px 0 0; text-decoration:underline; }
#smd_help h4 { font: bold 12px Georgia, serif; letter-spacing: 1px; margin: 10px 0 0; text-transform: uppercase; }
#smd_help .atnm { font-weight:bold; }
#smd_help .mand { background:#eee; border:1px dotted #999; }
#smd_help table { width:90%; text-align:center; padding-bottom:1em; border-collapse:collapse; }
#smd_help td, #smd_help th { border:1px solid #999; padding:.5em; }
#smd_help ul { list-style-type:square; }
#smd_help .important { color:red; }
#smd_help li { margin:5px 20px 5px 30px; }
#smd_help .break { margin-top:5px; }
#smd_help dl dd { margin:2px 15px; }
#smd_help dl dd:before { content: "\2022\00a0"; }
#smd_help dl dd dl { padding: 0 15px; }
</style>
<!-- *** END PLUGIN CSS *** -->
";s:4:"code";s:20566:"function smd_xml($atts, $thing=NULL) {
	global $pretext, $thispage, $smd_xml_pginfo;

	extract(lAtts(array(
		'data' => '',
		'record' => '',
		'fields' => '',
		'skip' => '',
		'uppercase' => '0',
		'convert' => '', // search:replace, search:replace, ...
		'target_enc' => 'UTF-8',
		'defaults' => '',
		'set_empty' => '0',
		'format' => '',
		'form' => '',
		'limit' => 0,
		'offset' => 0,
		'linkify' => '', // Deprecated: use format="field|link" instead
		'pageform' => '',
		'pagevar' => 'pg',
		'pagepos' => 'below',
		'wraptag' => '',
		'break' => '',
		'class' => '',
		'delim' => ',',
		'param_delim' => '|',
		'concat_delim' => ' ',
		'concat' => '1',
		'cache_time' => '0', // in seconds
		'hashsize' => '6:5',
		'line_length' => '8192',
		'transport' => '',
		'debug' => '0',
	), $atts));

	$src = '';
	$thing = (empty($form)) ? $thing : fetch_form($form);

	if ($linkify) {
		trigger_error("linkify attribute deprecated: use format=\"field|link\" instead", E_USER_NOTICE);
	}

	if (empty($data)) {
		trigger_error("smd_xml requires a data source");
	}
	if (empty($record)) {
		trigger_error("smd_xml requires a record name within your data stream");
	}
	if (empty($fields)) {
		trigger_error("smd_xml requires a list of fields to extract from within your records");
	}

	$pagebit = $rowinfo = array();
	if ($pageform) {
		$pagePosAllowed = array("below", "above");
		$pageform = fetch_form($pageform);
		$pagepos = str_replace('smd_', '', $pagepos); // For convenience
		$pagepos = do_list($pagepos, $delim);
		foreach ($pagepos as $pageitem) {
			$pagebit[] = (in_array($pageitem, $pagePosAllowed)) ? $pageitem : $pagePosAllowed[0];
		}
	}

	$target_enc = (in_array($target_enc, array('ISO-8859-1', 'US-ASCII', 'UTF-8'))) ? $target_enc : 'UTF-8';

	// Make a unique hash value for this instance so the XML document can be cached in txp_prefs
	$uniq = '';
	$md5 = md5($data.$record.$fields);
	list($hashLen, $hashSkip) = explode(':', $hashsize);
	for ($idx = 0, $cnt = 0; $cnt < $hashLen; $cnt++, $idx = (($idx+$hashSkip) % strlen($md5))) {
		$uniq .= $md5[$idx];
	}

	$var_lastmod = 'smd_xml_lmod_'.$uniq;
	$var_data = 'smd_xml_data_'.$uniq;
	$lastmod = get_pref($var_lastmod, 0);
	$read_cache = (($cache_time > 0) && ((time() - $lastmod) < $cache_time)) ? true : false;
	$read_cache = gps('force_read') ? false : $read_cache; // Override cache_time
	$crush = function_exists('gzcompress') && function_exists('gzuncompress');
	$pagevar = ($pagevar == 'SMD_XML_UNIQUE_ID') ? $uniq : $pagevar;

	// Cached document is gzipped and then (yuk!) base64'd if zlib is compiled in.
	// Would prefer to store binary data directly but trying to insert it into a txp_prefs
	// text field always gave problems on insertion and/or retrieval
	if ($read_cache) {
		if ($debug > 1) {
			dmp ('++ READING CACHE '.$var_data.' ++');
		}
		$src = $crush ? gzuncompress(base64_decode(get_pref($var_data))) : get_pref($var_data);
	} else {
		if ((strpos($data, 'http:') === 0) || (strpos($data, 'https:') === 0)) {
			// The data is to be fetched from a URL
			if (!$transport) {
				if( is_callable('fsockopen') )
					$transport = 'fsock';
				elseif( is_callable('curl_init') ) {
					$transport = 'curl';
				} else {
					$transport = '';
				}
			}

			switch ($transport) {
				case 'curl':
					$c = curl_init();
					curl_setopt($c, CURLOPT_URL, $data);
					curl_setopt($c, CURLOPT_REFERER, hu);
					curl_setopt($c, CURLOPT_RETURNTRANSFER, true);
					curl_setopt($c, CURLOPT_VERBOSE, false);
					curl_setopt($c, CURLOPT_TIMEOUT, 10);
					$src = curl_exec($c);
					break;
				case 'fsock':
					$url = parse_url($data);
					switch ($url['scheme']) {
						case 'https':
							$url['scheme'] = 'ssl://';
							$url['port'] = 443;
							break;
						case 'http':
						default:
							$url['scheme'] = '';
							$url['port'] = 80;
					}
					$fp = fsockopen ($url['scheme'] . $url['host'], $url['port'], $errno, $errstr, 10);

					$qry = 'GET '.$url['path'] . ((isset($url['query'])) ? '?'.$url['query']: '');
					$qry .= " HTTP/1.0\r\n";
					$qry .= "Host: ".$url['host']."\r\n";
					$qry .= "User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6\r\n\r\n"; // *shrug*

					fputs($fp, $qry);
					stream_set_timeout($fp, 10);
					$info = stream_get_meta_data($fp);

					$hdrs = true;
					while ((!feof($fp)) && (!$info['timed_out'])) {
						$line = fgets($fp, $line_length);
						$line = preg_replace("[\r\n]", "", $line);
						if ($hdrs == false) {
							$src .= $line."\n";
						}
						if (strlen($line) == 0) $hdrs = false;
					}
					if ($info['timed_out']) {
						$src = '';
					}
					fclose($fp);
					break;
				default:
					$src = '';
			}
		} else  {
			// Assume data is presented in raw XML
			$src = $data;
		}
	}

	// Store the current document in the cache and datestamp it
	if ($cache_time > 0 && !$read_cache) {
		if ($debug > 1) {
			dmp('++ DATA CACHED to '.$var_data.' ++');
		}
		$srcinfo = $crush ? base64_encode(gzcompress($src)) : doSlash($src);
		set_pref($var_lastmod, time(), 'smd_xml', PREF_HIDDEN, 'text_input');
		set_pref($var_data, $srcinfo, 'smd_xml', PREF_HIDDEN, 'text_input');
	}

	// Make up a replacement array for decoded entities...
	$conversions = array();
	$convert = do_list($convert, $delim);
	foreach ($convert as $pair) {
		if (empty($pair)) continue;

		$pair = do_list($pair, $param_delim);
		$conversions[$pair[0]] = $pair[1];
	}

	if ($debug > 1) {
		echo "++ CONVERSIONS ++";
		dmp($conversions);
	}

	// ... and replace them
	$src = strtr($src, $conversions);

	if ($debug > 2) {
		echo "++ FILTERED SOURCE DATA ++";
		dmp($src);
	}

	// Set up any defaults
	$defaults = do_list($defaults, $delim);
	$dflts = array();
	foreach ($defaults as $dflt) {
		if ($dflt == '') continue;
		$parts = explode($param_delim, $dflt);
		$dflts[$parts[0]] = $parts[1];
	}
	$defaults = $dflts;

	// Set up any formatting
	$format = do_list($format, $delim);
	$formats = array();
	foreach ($format as $frmdef) {
		if ($frmdef == '') continue;
		$parts = explode($param_delim, $frmdef);
		$formats['type'][$parts[0]] = $parts[1];
		for($idx = 0; $idx < count($parts)-2; $idx++) {
			$formats['data'][$parts[0]][] = $parts[$idx+2];
		}
	}

	if ($debug > 1) {
		if ($defaults) {
			echo "++ DEFAULTS ++";
			dmp($defaults);
		}
		if ($formats) {
			echo "++ FORMATS ++";
			dmp($formats);
		}
	}

	if (!empty($src)) {
		// Paging information
		$rowinfo['numrecs'] = substr_count($src, '<'.$record);
		$rowinfo['page_rowcnt'] = 0;
		$rowinfo['limit'] = ($limit < $rowinfo['numrecs']) ? $limit : 0;
		if ($offset >= 0) {
			if ($offset < $rowinfo['numrecs']) {
				$rowinfo['offset'] = $offset;
			} else {
				$rowinfo['offset'] = $rowinfo['numrecs'];
				$rowinfo['limit'] = 0;
			}
		} else {
			$negoff = $rowinfo['numrecs'] + $offset;
			if ($negoff > 0) {
				$rowinfo['offset'] = $negoff;
			} else {
				$rowinfo['offset'] = 0;
				$rowinfo['limit'] = $rowinfo['numrecs'];
			}
		}

		// Re-assign the atts in case they've been changed by reaching the bounds of the document
		$offset = $rowinfo['offset'];
		$limit = $rowinfo['limit'];

		if ($limit > 0) {
			$keepsafe = $thispage;
			$rowinfo['total'] = $rowinfo['numrecs'] - $offset;
			$rowinfo['numPages'] = ceil($rowinfo['total'] / $limit);
			$rowinfo['pg'] = (!gps($pagevar)) ? 1 : gps($pagevar);
			$rowinfo['pgoffset'] = $offset + (($rowinfo['pg'] - 1) * $limit);
			$rowinfo['prevpg'] = (($rowinfo['pg']-1) > 0) ? $rowinfo['pg']-1 : '';
			$rowinfo['nextpg'] = (($rowinfo['pg']+1) <= $rowinfo['numPages']) ? $rowinfo['pg']+1 : '';
			$rowinfo['pagerows'] = ($rowinfo['pg'] == $rowinfo['numPages']) ? $rowinfo['total']-($limit * ($rowinfo['numPages']-1)) : $limit;
			$rowinfo['unique_id'] = $uniq;

			// send paging info to txp:newer and txp:older
			$pageout['pg'] = $rowinfo['pg'];
			$pageout['numPages'] = $rowinfo['numPages'];
			$pageout['s'] = $pretext['s'];
			$pageout['c'] = $pretext['c'];
			$pageout['grand_total'] = $rowinfo['numrecs'];
			$pageout['total'] = $rowinfo['total'];
			$thispage = $pageout;
		} else {
			$rowinfo['pgoffset'] = $offset;
		}

		$rowinfo['running_rowcnt'] = $rowinfo['pgoffset']-$offset;
		$rowinfo['first_rec'] = $rowinfo['running_rowcnt'] + 1;
		$rowinfo['last_rec'] = ($limit > 0) ? $rowinfo['first_rec'] + $rowinfo['pagerows'] - 1 : $rowinfo['numrecs'];
		if ($limit > 0) {
			$rowinfo['prev_rows'] = (($rowinfo['prevpg']) ? $limit : 0);
			$rowinfo['next_rows'] = (($rowinfo['nextpg']) ? (($rowinfo['last_rec']+$limit+1) > $rowinfo['total'] ? $rowinfo['total']-$rowinfo['last_rec'] : $limit) : 0);
		}

		if ($debug > 0) {
			echo '++ PAGING INFO ++';
			dmp($rowinfo);
		}

		// Do the dirty XML deed
		$ref = new smd_xml_parser($src, $fields, $record, $skip, $uppercase, $target_enc, $linkify, $defaults, $set_empty, $formats, $thing, $delim, $param_delim, $concat, $concat_delim, $rowinfo, $debug);
		$result = $ref->getResults();

		// Create the page form
		$pageblock = '';
		$finalout = $repagements = array();

		if ($rowinfo['limit'] > 0) {
			$repagements['{smd_xml_totalrecs}'] = $rowinfo['total'];
			$repagements['{smd_xml_pagerecs}'] = $rowinfo['pagerows'];
			$repagements['{smd_xml_pages}'] = $rowinfo['numPages'];
			$repagements['{smd_xml_prevpage}'] = $rowinfo['prevpg'];
			$repagements['{smd_xml_thispage}'] = $rowinfo['pg'];
			$repagements['{smd_xml_nextpage}'] = $rowinfo['nextpg'];
			$repagements['{smd_xml_rec_start}'] = $rowinfo['first_rec'];
			$repagements['{smd_xml_rec_end}'] = $rowinfo['last_rec'];
			$repagements['{smd_xml_recs_prev}'] = $rowinfo['prev_rows'];
			$repagements['{smd_xml_recs_next}'] = $rowinfo['next_rows'];
			$repagements['{smd_xml_unique_id}'] = $rowinfo['unique_id'];
			$smd_xml_pginfo = $repagements;
			$pageblock = parse(strtr($pageform, $repagements));
		}

		// Make up the final output
		if (in_array("above", $pagebit)) {
			$finalout[] = $pageblock;
		}
		$finalout[] = doWrap($result, $wraptag, $break, $class);
		if (in_array("below", $pagebit)) {
			$finalout[] = $pageblock;
		}

		// Restore the paging outside the plugin container
		if ($limit > 0) {
			$thispage = $keepsafe;
		}

		return join('', $finalout);
	} else {
		return '';
	}
}

class smd_xml_parser {
	private $data;
	private $fields;
	private $rec;
	private $skip;
	private $cf;
	private $outenc;
	private $linkify;
	private $defaults;
	private $set_empty;
	private $formats;

	private $intag;
	private $indata;
	private $skiptag;
	private $xmltag;
	private $xmlatts;
	private $xmldata;
	private $thing;
	private $out;
	private $pdelim;
	private $cdelim;
	private $concat;
	private $rowinfo;
	private $show_record;
	private $debug;

	/**
	* constructor
	*/
	function smd_xml_parser($data, $fields, $rec, $skip, $cf, $outenc, $linkify, $defaults, $set_empty, $formats, $thing, $delim, $pdelim, $concat, $cdelim, $rinfo, $debug=0) {
		$this->data = $data;
		$this->fields = do_list($fields, $delim);
		$this->subfields = array();
		$this->skip = do_list($skip, $delim);
		$this->rec = $rec;
		$this->cf = $cf; // Case folding
		$this->outenc = $outenc; // Target encoding
		$this->linkify = do_list($linkify, $delim);
		$this->defaults = $defaults;
		$this->set_empty = $set_empty;
		$this->formats = $formats;
		$this->thing = $thing;
		$this->pdelim = $pdelim;
		$this->cdelim = $cdelim;
		$this->concat = $concat;
		$this->rowinfo = $rinfo;
		$this->debug = $debug;

		$this->intag = false;
		$this->exists = false;
		$this->skiptag = '';
		$this->xmltag = '';
		$this->xmltatts = '';
		$this->xmldata = array();
		$this->out = array();

		// Copy any subfields out of the list
		foreach ($this->fields as $key => $fld) {
			$sf = do_list($fld, $pdelim);
			for($idx = 1; $idx < count($sf); $idx++) {
				$this->subfields[$sf[0]][] = $sf[$idx];
			}
			$this->fields[$key] = $sf[0]; // Make sure the field only holds the zeroth entry
		}
		$this->parse();
	}

	public function getResults() {
		if ($this->out) {
			return $this->out;
		} else {
			return '';
		}
	}

	private function parse() {
		$this->data = preg_replace("/>"."[[:space:]]+"."</i", "><", $this->data); // Kill whitespace in data
		$xmlparser = xml_parser_create();
		xml_set_object($xmlparser, $this);
		xml_parser_set_option($xmlparser, XML_OPTION_CASE_FOLDING, $this->cf);
		xml_parser_set_option($xmlparser, XML_OPTION_TARGET_ENCODING, $this->outenc);
		xml_set_element_handler($xmlparser, "smd_xml_start_tag", "smd_xml_end_tag");
		xml_set_character_data_handler($xmlparser, "smd_xml_tag_contents");
		xml_parse($xmlparser, $this->data);
		xml_parser_free($xmlparser);
	}

	private function smd_xml_start_tag($parser, $name, $attribs) {
		$pgval = $this->rowinfo['pgoffset'] - 1;
		$lim = $this->rowinfo['limit'] > 0;
		$this->show_record = $lim ? (($this->rowinfo['page_rowcnt'] > $pgval) && ($this->rowinfo['page_rowcnt'] <= $pgval + $this->rowinfo['pagerows'])) : $this->rowinfo['page_rowcnt'] > $pgval;

		if ($name == $this->rec && $this->show_record) {
			$this->intag = true;
		}
		if ($this->intag) {
			if (in_array($name, $this->skip)) {
				$this->xmltag = '';
				$this->xmlatts = array();
				$this->skiptag = $name;
			} else {
				$this->xmltag = $name;
				$this->xmlatts = $attribs;
				if ($this->concat && isset($this->xmldata['{'.$this->xmltag.'}'])) {
					$this->exists = true;
        	 } else {
					$this->exists = false;
				}
			}
		}
		$this->indata = false;
	}

	private function smd_xml_end_tag($parser, $name) {
		if ($name == $this->rec && $name != $this->skiptag) {
			$this->intag = false;
			$lim = ($this->rowinfo['limit'] > 0) ? true : false;

			// Append row counter information
			$this->xmldata['{smd_xml_totalrecs}'] = $lim ? $this->rowinfo['total'] : $this->rowinfo['numrecs'] - $this->rowinfo['pgoffset'];
			$this->xmldata['{smd_xml_pagerecs}'] = $lim ? $this->rowinfo['pagerows'] : $this->xmldata['{smd_xml_totalrecs}'];
			$this->xmldata['{smd_xml_pages}'] = $lim ? $this->rowinfo['numPages'] : 1;
			$this->xmldata['{smd_xml_thispage}'] = $lim ? $this->rowinfo['pg'] : 1;
			$this->xmldata['{smd_xml_thisindex}'] = $this->rowinfo['page_rowcnt'] - $this->rowinfo['offset'];
			$this->xmldata['{smd_xml_thisrec}'] = $this->rowinfo['page_rowcnt'] - $this->rowinfo['offset'] + 1;
			$this->xmldata['{smd_xml_runindex}'] = $this->rowinfo['running_rowcnt'];
			$this->xmldata['{smd_xml_runrec}'] = $this->rowinfo['running_rowcnt'] + 1;

			// Set any tag contents to a default value, if specified
			if ($this->defaults) {
				foreach ($this->fields as $field) {
					$flist = array($field);
					if (array_key_exists($field, $this->subfields)) {
						$flist = array_merge($flist, $this->subfields[$field]);
					}
					foreach ($flist as $sfield) {
						if (!isset($this->xmldata['{'.$sfield.'}'])) {
							if (array_key_exists($sfield, $this->defaults)) {
								$this->xmldata['{'.$sfield.'}'] = $this->defaults[$sfield];
							} else if ($this->set_empty) {
								$this->xmldata['{'.$sfield.'}'] = '';
							}
						}
					}
				}
			}

			// Reformat any fields, if specified
			if ($this->formats) {
				foreach ($this->fields as $field) {
					$flist = array($field);
					if (array_key_exists($field, $this->subfields)) {
						$flist = array_merge($flist, $this->subfields[$field]);
					}
					foreach ($flist as $sfield) {
						if (isset($this->xmldata['{'.$sfield.'}']) && array_key_exists($sfield, $this->formats['type'])) {
							switch ($this->formats['type'][$sfield]) {
								case 'date':
									$nd = strtotime($this->xmldata['{'.$sfield.'}']);
									if ($nd !== false) {
										$this->xmldata['{'.$sfield.'}'] = strftime($this->formats['data'][$sfield][0], $nd);
									}
									break;
								case 'link':
									// From http://codesnippets.joyent.com/posts/show/2104
									$pat = "@\b(https?://)?(([0-9a-zA-Z_!~*'().&=+$%-]+:)?[0-9a-zA-Z_!~*'().&=+$%-]+\@)?(([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-zA-Z_!~*'()-]+\.)*([0-9a-zA-Z][0-9a-zA-Z-]{0,61})?[0-9a-zA-Z]\.[a-zA-Z]{2,6})(:[0-9]{1,4})?((/[0-9a-zA-Z_!~*'().;?:\@&=+$,%#-]+)*/?)@";
									$this->xmldata['{'.$sfield.'}'] = preg_replace($pat, '<a href="\0">\0</a>', $this->xmldata['{'.$sfield.'}']);
									break;
								case 'escape':
									$this->xmldata['{'.$sfield.'}'] = doSlash($this->xmldata['{'.$sfield.'}']);
									break;
								case 'sanitize':
									if ($this->formats['data'][$sfield][0] == "url") {
										$this->xmldata['{'.$sfield.'}'] = sanitizeForUrl($this->xmldata['{'.$sfield.'}']);
									} else if ($this->formats['data'][$sfield][0] == "file") {
										$this->xmldata['{'.$sfield.'}'] = sanitizeForFile($this->xmldata['{'.$sfield.'}']);
									} else if ($this->formats['data'][$sfield][0] == "url_title") {
										$this->xmldata['{'.$sfield.'}'] = stripSpace($this->xmldata['{'.$sfield.'}'], 1);
									}
									break;
								case 'case':
									for ($idx = 0; $idx < count($this->formats['data'][$sfield]); $idx++) {
										if ($this->formats['data'][$sfield][$idx] == "upper") {
											$this->xmldata['{'.$sfield.'}'] = strtoupper($this->xmldata['{'.$sfield.'}']);
										} else if ($this->formats['data'][$sfield][$idx] == "lower") {
											$this->xmldata['{'.$sfield.'}'] = strtolower($this->xmldata['{'.$sfield.'}']);
										} else if ($this->formats['data'][$sfield][$idx] == "ucfirst") {
											$this->xmldata['{'.$sfield.'}'] = ucfirst($this->xmldata['{'.$sfield.'}']);
										} else if ($this->formats['data'][$sfield][$idx] == "ucwords") {
											$this->xmldata['{'.$sfield.'}'] = ucwords($this->xmldata['{'.$sfield.'}']);
										}
									}
									break;
							}
						}
					}
				}
			}

			if ($this->debug > 0) {
				echo "++ REPLACEMENTS ++";
				dmp($this->xmldata);
			}

			if ($this->show_record) {
				$this->out[] = parse(strtr($this->thing, $this->xmldata));
			}

			// Prepare for next iteration
			$this->rowinfo['running_rowcnt'] = $this->rowinfo['running_rowcnt']+1;
			$this->rowinfo['page_rowcnt'] = $this->rowinfo['page_rowcnt']+1;
			$this->xmldata = array();
			$this->indata = false;
		}
		if ($name == $this->skiptag) {
			$this->skiptag = '';
		}
	}

	private function smd_xml_tag_contents($parser, $data) {
		if ($this->intag && !$this->skiptag) {
			if ($this->debug > 1) {
				dmp($this->xmltag . " : ". $data);
			}
			if (in_array($this->xmltag, $this->fields)) {
				// TO REMOVE
				if (in_array($this->xmltag, $this->linkify)) {
					$data = preg_replace('@(https?://([-\w\.]+)+(:\d+)?(/([\w/_\.]*(\?\S+)?)?)?)@', '<a href="$1">$1</a>', $data);
				}
				// END: TO REMOVE
				if ($this->indata) {
					if ($this->exists) {
						$this->xmldata['{'.$this->xmltag.'}'] .= $this->cdelim.$data;
					} else {
						$this->xmldata['{'.$this->xmltag.'}'] .= $data;
					}
				} else {
					if ($this->exists) {
						$this->xmldata['{'.$this->xmltag.'}'] .= $this->cdelim.$data;
					} else {
						$this->xmldata['{'.$this->xmltag.'}'] = $data;
					}
				}

				// Copy the tag to any duplicate nodes
				if (array_key_exists($this->xmltag, $this->subfields)) {
					foreach($this->subfields[$this->xmltag] as $copyfield) {
						$this->xmldata['{'.$copyfield.'}'] = $this->xmldata['{'.$this->xmltag.'}'];
					}
				}

				// Create any attribute nodes
				if ($this->xmlatts) {
					foreach ($this->xmlatts as $xkey => $xval) {
						$this->xmldata['{'.$this->xmltag.$this->pdelim.$xkey.'}'] = $xval;
					}
				}
				$this->indata = true;
			}
		}
	}
}

// Convenience functions to check if there's a prev/next page defined. Could also use smd_if
function smd_xml_if_prev($atts, $thing) {
	global $smd_xml_pginfo;

	$res = $smd_xml_pginfo && $smd_xml_pginfo['{smd_xml_prevpage}'] != '';
	return parse(EvalElse(strtr($thing, $smd_xml_pginfo), $res));
}
function smd_xml_if_next($atts, $thing) {
	global $smd_xml_pginfo;

	$res = $smd_xml_pginfo && $smd_xml_pginfo['{smd_xml_nextpage}'] != '';
	return parse(EvalElse(strtr($thing, $smd_xml_pginfo), $res));
}";s:12:"code_restore";s:40797:"/**
 * smd_xml
 *
 * A Textpattern CMS plugin for reading and parsing XML data:
 *  -> Read XML stream from URL, string or (experimental) SOAP client. XSL transform available
 *  -> Specify field hierarchy to extract specific parts of the data stream
 *  -> Optionally format data items prior to output
 *  -> Cacheing supported to ease server load
 *  -> Results can be paged
 *
 * @author Stef Dawson
 * @link   http://stefdawson.com/
 */

// TODO:
//      --> JSON support?
//      -->   Some way of grouping items, maybe via concat. e.g. instead of assigning output directly to $out[], add the group to a pseudo-tag in $xmldata,
//      -->     e.g. concat="2|Measure=>My_Measurements" will make {My_Measurements} available in the container which will contain the concatenated output of all (possibly processed with ontag) Measure tags
//     Allow fields="NodeWrapper->*" to specify that you want all sub-nodes to be included in the replacement stream
//      -->  Perhaps some mechanism to specify the number of levels to go down as well, e.g.:
//      -->    NodeWrapper->*    =  all sub-nodes
//      -->    NodeWrapper->*1   =  1st-child sub-nodes
//      -->    NodeWrapper->*2   =  2nd-child sub-nodes
//      -->    NodeWrapper->*1+2 =  1st and 2nd-child sub-nodes
//      -->    NodeWrapper->*1-4 =  1st thru 4th-child sub-nodes
function smd_xml($atts, $thing=NULL) {
	global $pretext, $thispage, $smd_xml_pginfo;

	extract(lAtts(array(
		'data'             => '',
		'datawrap'         => '',
		'record'           => '',
		'fields'           => '',
		'skip'             => '',
		'match'            => '',
		'timeout'          => 10,
		'transform'        => '',
		'kill_spaces'      => 1,
		'ontagstart'       => '',
		'ontagend'         => '',
		'load_atts'        => 'start', // (tag) start or end
		'uppercase'        => '0',
		'convert'          => '', // search|replace, search|replace, ...
		'target_enc'       => 'UTF-8',
		'defaults'         => '',
		'set_empty'        => '0',
		'format'           => '',
		'form'             => '',
		'pageform'         => '',
		'pagevar'          => 'pg',
		'pagepos'          => 'below',
		'delim'            => ',',
		'param_delim'      => '|',
		'tag_delim'        => '|',
		'concat'           => '1',
		'concat_delim'     => ' ',
		'transport'        => '',
		'transport_opts'   => '',
		'transport_config' => '',
		'cache_time'       => '3600', // in seconds
		'hashsize'         => '6:5',
		'line_length'      => '8192',
		'var_prefix'       => ', smd_xml_',
		'limit'            => 0,
		'offset'           => 0,
		'wraptag'          => '',
		'break'            => '',
		'class'            => '',
		'debug'            => '0',
	), $atts));

	// This constant is only available in PHP 5.4+ so fake it for earlier versions
	// and take the hit on them not knowing what the flag means
	if (!defined('ENT_XML1')) {
		define('ENT_XML1', 16);
	}

	$src = '';
	$thing = (empty($form)) ? $thing : fetch_form($form);
	$soap_wrapped = false;

	if (empty($data)) {
		trigger_error("smd_xml requires a data source", E_USER_ERROR);
		return;
	}
	if (empty($record)) {
		trigger_error("smd_xml requires a record name within your data stream", E_USER_ERROR);
		return;
	}

	// Work out where the paging info is to appear
	$pagebit = $rowinfo = array();
	if ($pageform) {
		$pagePosAllowed = array("below", "above");
		$pageform = fetch_form($pageform);
		$pagepos = str_replace('smd_', '', $pagepos); // For convenience
		$pagepos = do_list($pagepos, $delim);
		foreach ($pagepos as $pageitem) {
			$pagebit[] = (in_array($pageitem, $pagePosAllowed)) ? $pageitem : $pagePosAllowed[0];
		}
	}

	$target_enc = (in_array($target_enc, array('ISO-8859-1', 'US-ASCII', 'UTF-8'))) ? $target_enc : 'UTF-8';

	// Extract the prefixes
	$prefixes = do_list($var_prefix);
	$tag_prefix = $prefixes[0];
	$page_prefix = isset($prefixes[1]) ? $prefixes[1] : $tag_prefix;

	// Make a unique hash value for this instance so the XML document can be cached in txp_prefs
	$uniq = '';
	$md5 = md5($data.$record.$fields);
	list($hashLen, $hashSkip) = explode(':', $hashsize);
	for ($idx = 0, $cnt = 0; $cnt < $hashLen; $cnt++, $idx = (($idx+$hashSkip) % strlen($md5))) {
		$uniq .= $md5[$idx];
	}

	$var_lastmod = 'smd_xml_lmod_'.$uniq;
	$var_data = 'smd_xml_data_'.$uniq;
	$lastmod = get_pref($var_lastmod, 0);
	$read_cache = (($cache_time > 0) && ((time() - $lastmod) < $cache_time)) ? true : false;
	$crush = function_exists('gzcompress') && function_exists('gzuncompress');
	$pagevar = ($pagevar == 'SMD_XML_UNIQUE_ID') ? $uniq : $pagevar;

	// Cached document is gzipped and then (yuk!) base64'd if zlib is compiled in.
	// Would prefer to store binary data directly but trying to insert it into a txp_prefs
	// text field always gives problems on insertion and/or retrieval
	if ($read_cache) {
		if ($debug > 1) {
			trace_add ('[smd_xml reading cache '.$var_data.']');
		}
		$src = $crush ? gzuncompress(base64_decode(get_pref($var_data))) : get_pref($var_data);
	} else {
		if ((strpos($data, 'http:') === 0) || (strpos($data, 'https:') === 0) || (strpos($data, 'ftp:') === 0)) {
			// The data is to be fetched from a URL.
			// Has the transport mechanism been specified? If not, choose one
			if (!$transport) {
				if ( function_exists('curl_version') ) {
					$transport = 'curl';
				} else if ( function_exists('fsockopen') ) {
					$transport = 'fsock';
				} else {
					$transport = '';
				}
			}

			switch ($transport) {
				case 'curl':
					$src = smd_xml_curl($data, $timeout);
				break;
				case 'fsock':
					$url = parse_url($data);
					switch ($url['scheme']) {
						case 'https':
							$url['scheme'] = 'ssl://';
							$url['port'] = 443;
						break;
						case 'ftp':
							$url['scheme'] = '';
							$url['port'] = 21;
						break;
						case 'http':
						default:
							$url['scheme'] = '';
							$url['port'] = 80;
					}
					$fp = fsockopen ($url['scheme'] . $url['host'], $url['port'], $errno, $errstr, $timeout);

					$qry = 'GET '.$url['path'] . ((isset($url['query'])) ? '?'.$url['query'] : '');
					$qry .= " HTTP/1.0\r\n";
					$qry .= "Host: ".$url['host']."\r\n";
					$qry .= "User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6\r\n\r\n"; // *shrug*

					fputs($fp, $qry);
					stream_set_timeout($fp, $timeout);
					$info = stream_get_meta_data($fp);

					$hdrs = true;
					while ((!feof($fp)) && (!$info['timed_out'])) {
						$line = fgets($fp, $line_length);
						$line = preg_replace("[\r\n]", "", $line);
						if ($hdrs == false) {
							$src .= $line."\n";
						}
						if (strlen($line) == 0) $hdrs = false;
					}
					if ($info['timed_out']) {
						$src = '';
					}
					fclose($fp);
				break;
				case 'soap':
					ini_set('soap.wsdl_cache_enabled', '0');
					if (class_exists('SoapClient')) {
						$url = $data;
						$url .= (stripos($url, '?WSDL') === false) ? '?WSDL' : '';

						$client = '';

						try {
							$client = new SoapClient($url);
						} catch (SoapFault $E) {
							echo $E->faultstring;
							$src = '';
						}

						if ($client) {
							// Use explode() because do_list() removes spaces
							$transport_config = explode($delim, $transport_config);
							$tcfg = array();
							foreach ($transport_config as $transopt) {
								$topts = explode($param_delim, $transopt);
								if (count($topts) == 2) {
									$tcfg[$topts[0]] = $topts[1];
								}
							}

							$tcfg['soap_delim'] = isset($tcfg['soap_delim']) ? $tcfg['soap_delim'] : $param_delim;
							$tcfg['soap_type_input'] = isset($tcfg['soap_type_input']) ? $tcfg['soap_type_input'] : 'nvpairs';
							$tcfg['soap_type_output'] = isset($tcfg['soap_type_output']) ? $tcfg['soap_type_output'] : '';
							$tcfg['soap_numeric_wrap'] = isset($tcfg['soap_numeric_wrap']) ? $tcfg['soap_numeric_wrap'] : $record;

							$transItems = do_list($transport_opts, $delim);
							$cliFn = $transItems[0];
							$params = array();

							switch ($tcfg['soap_type_input']) {
								case 'nvpairs':
									$param = do_list($transItems[1], $param_delim);
									$num = (count($param) / 2);
									for ($idx = 0; $idx < $num; $idx++) {
										$key = array_shift($param);
										$val = array_shift($param);
										$params[$key] = $val;
									}
								break;
								case 'xml':
									$doc = new DOMDocument();
									$doc->preserveWhiteSpace = false;
									$doc->loadXML($transItems[1]);
									$params = smd_xml_to_array($doc->documentElement);
									if (isset($tcfg['soap_wrap'])) {
										$params[$tcfg['soap_wrap']] = $params;
									}
								break;
							}
							$resParts = do_list($transItems[2], $param_delim);
							$resFn = array_shift($resParts);

							$result = '';
							try {
							   $result = $client->$cliFn($params);
							} catch (SoapFault $E) {
							   echo $E->faultstring;
							}

							if ($result) {
								if ($resFn) {
									try {
										$src = $result->$resFn;
										if ($resParts) {
											$srcbobs = array();
											foreach ($resParts as $resIdx) {
												$srcbobs[] = $src->$resIdx;
											}

											$src = join($tcfg['soap_delim'], $srcbobs);
										}
										switch ($tcfg['soap_type_output']) {
											case 'xml':
												// Oh lordy me -- just to convert stdClass:: format to associative array
												$xmlbld = new smd_xml_build_data(json_decode(json_encode($src), true), $datawrap, $tcfg['soap_numeric_wrap']);
												$soap_wrapped = true;
												$src = $xmlbld->getData();
											break;
										}
									} catch (SoapFault $E) {
									   echo $E->faultstring;
									}
								} else {
									$src = $result;
								}
							} else {
								$src = '';
							}
						}
					} else {
						$src = '';
					}
				break;
				default:
					$src = '';
			}
		} else  {
			// Assume data is presented in raw XML
			$src = $data;
		}
	}

	// Remove inter-tag whitespace: highly recommended, but makes the feed less easy to debug
	// so you may elect to turn it off while testing
	if ($kill_spaces) {
		$src = preg_replace("/>"."[[:space:]]+"."</i", "><", $src);
	}

	// Perform transformations on the fetched source
	if ($transform) {
		$xforms = do_list($transform, $delim);
		foreach ($xforms as $xform) {
			$tops = do_list($xform, $param_delim);
			$ttyp = array_shift($tops);
			switch ($ttyp) {
				case 'xsl':
					$xsl = smd_xml_curl($tops[0], $timeout);
					$src = smd_xml_xsl_transform($src, $xsl);
				break;
				case 'replace':
					$src = preg_replace($tops[0], (isset($tops[1]) ? $tops[1] : ''), $src);
				break;
			}
		}
	}

	// Store the current document in the cache and datestamp it
	if ($cache_time > 0 && !$read_cache) {
		$srcinfo = $crush ? base64_encode(gzcompress($src)) : doSlash($src);
		set_pref($var_lastmod, time(), 'smd_xml', PREF_HIDDEN, 'text_input');
		set_pref($var_data, $srcinfo, 'smd_xml', PREF_HIDDEN, 'text_input');
	}

	// Make up a replacement array for decoded entities...
	$conversions = array();
	$convert = do_list($convert, $delim);
	foreach ($convert as $pair) {
		if (empty($pair)) continue;

		$pair = do_list($pair, $param_delim);
		$conversions[$pair[0]] = $pair[1];
	}

	if ($src && ($debug > 1)) {
		trace_add ('[smd_xml conversions: ' . print_r($conversions, true) . ']');
	}

	// ... and replace them
	$src = strtr($src, $conversions);

	// Wrap if necessary
	if ($datawrap && !$soap_wrapped) {
		$src = "<$datawrap>$src</$datawrap>";
	}

	if ($debug > 2) {
		trace_add ('[smd_xml filtered source: ' . $src . ']');
	}

	// Set up any ontag processing
	$ontagstart = do_list($ontagstart);
	$ontagend = do_list($ontagend);
	$watchStart = $watchEnd = $watchForm = array();
	foreach ($ontagstart as $ontag) {
		if ($ontag == '') continue;
		$parts = explode($param_delim, $ontag);
		$frm = array_shift($parts);
		$watchStart[$frm] = $parts;
		$watchForm[$frm] = fetch_form($frm);
	}
	foreach ($ontagend as $ontag) {
		if ($ontag == '') continue;
		$parts = explode($param_delim, $ontag);
		$frm = array_shift($parts);
		$watchEnd[$frm] = $parts;
		$watchForm[$frm] = fetch_form($frm);
	}

	if ($src && ($debug > 1)) {
		trace_add ('[smd_xml start watchers: ' . print_r($watchStart, true) . ']');
		trace_add ('[smd_xml end watchers: ' . print_r($watchEnd, true) . ']');
		trace_add ('[smd_xml watch forms: ' . print_r($watchForm, true) . ']');
	}

	// Set up any defaults
	$defaults = do_list($defaults, $delim);
	$dflts = array();
	foreach ($defaults as $dflt) {
		if ($dflt == '') continue;
		$parts = explode($param_delim, $dflt);
		$dflts[$parts[0]] = $parts[1];
	}
	$defaults = $dflts;

	// Set up any formatting
	$format = do_list($format, $delim);
	$formats = array();
	foreach ($format as $frmdef) {
		if ($frmdef == '') continue;
		$parts = explode($param_delim, $frmdef);
		$formats['type'][$parts[0]] = $parts[1];
		for($idx = 0; $idx < count($parts)-2; $idx++) {
			$formats['data'][$parts[0]][] = $parts[$idx+2];
		}
	}

	// Set up any matches
	$match = do_list($match, $delim);
	$matches = array();
	foreach ($match as $item) {
		if ($item == '') continue;
		$parts = explode($param_delim, $item);
		$matches[$parts[0]] = $parts[1];
	}
	$match = $matches;

	if ($src && ($debug > 1)) {
		if ($defaults) {
			trace_add ('[smd_xml defaults: ' . print_r($defaults, true) . ']');
		}
		if ($formats) {
			trace_add ('[smd_xml formats: ' . print_r($formats, true) . ']');
		}
		if ($match) {
			trace_add ('[smd_xml matches: ' . print_r($match, true) . ']');
		}
	}

	if (!empty($src)) {
		// Paging information
		$rowinfo['numrecs'] = substr_count($src, '<'.$record);
		$rowinfo['page_rowcnt'] = 0;
		$rowinfo['limit'] = ($limit < $rowinfo['numrecs']) ? $limit : 0;
		if ($offset >= 0) {
			if ($offset < $rowinfo['numrecs']) {
				$rowinfo['offset'] = $offset;
			} else {
				$rowinfo['offset'] = $rowinfo['numrecs'];
				$rowinfo['limit'] = 0;
			}
		} else {
			$negoff = $rowinfo['numrecs'] + $offset;
			if ($negoff > 0) {
				$rowinfo['offset'] = $negoff;
			} else {
				$rowinfo['offset'] = 0;
				$rowinfo['limit'] = $rowinfo['numrecs'];
			}
		}

		// Re-assign the atts in case they've been changed by reaching the bounds of the document
		$offset = $rowinfo['offset'];
		$limit = $rowinfo['limit'];

		if ($limit > 0) {
			$keepsafe = $thispage;
			$rowinfo['total'] = $rowinfo['numrecs'] - $offset;
			$rowinfo['numPages'] = ceil($rowinfo['total'] / $limit);
			$rowinfo['pg'] = (!gps($pagevar)) ? 1 : gps($pagevar);
			$rowinfo['pgoffset'] = $offset + (($rowinfo['pg'] - 1) * $limit);
			$rowinfo['prevpg'] = (($rowinfo['pg']-1) > 0) ? $rowinfo['pg']-1 : '';
			$rowinfo['nextpg'] = (($rowinfo['pg']+1) <= $rowinfo['numPages']) ? $rowinfo['pg']+1 : '';
			$rowinfo['pagerows'] = ($rowinfo['pg'] == $rowinfo['numPages']) ? $rowinfo['total']-($limit * ($rowinfo['numPages']-1)) : $limit;
			$rowinfo['unique_id'] = $uniq;

			// send paging info to txp:newer and txp:older
			$pageout['pg'] = $rowinfo['pg'];
			$pageout['numPages'] = $rowinfo['numPages'];
			$pageout['s'] = $pretext['s'];
			$pageout['c'] = $pretext['c'];
			$pageout['grand_total'] = $rowinfo['numrecs'];
			$pageout['total'] = $rowinfo['total'];
			$thispage = $pageout;
		} else {
			$rowinfo['pgoffset'] = $offset;
		}

		$rowinfo['running_rowcnt'] = $rowinfo['pgoffset']-$offset;
		$rowinfo['first_rec'] = $rowinfo['running_rowcnt'] + 1;
		$rowinfo['last_rec'] = ($limit > 0) ? $rowinfo['first_rec'] + $rowinfo['pagerows'] - 1 : $rowinfo['numrecs'];
		if ($limit > 0) {
			$rowinfo['prev_rows'] = (($rowinfo['prevpg']) ? $limit : 0);
			$rowinfo['next_rows'] = (($rowinfo['nextpg']) ? (($rowinfo['last_rec']+$limit+1) > $rowinfo['total'] ? $rowinfo['total']-$rowinfo['last_rec'] : $limit) : 0);
		}

		if ($debug > 0) {
			trace_add ('[smd_xml paging info: ' . print_r($rowinfo, true) . ']');
		}

		// Do the dirty XML deed
		$ref = new smd_xml_parser(array(
			'src'          => $src,
			'delim'        => $delim,
			'param_delim'  => $param_delim,
			'tag_delim'    => $tag_delim,
			'concat'       => $concat,
			'concat_delim' => $concat_delim,
			'fields'       => $fields,
			'skip'         => $skip,
			'match'        => $match,
			'record'       => $record,
			'casefold'     => $uppercase,
			'target_enc'   => $target_enc,
			'tag_prefix'   => $tag_prefix,
			'page_prefix'  => $page_prefix,
			'defaults'     => $defaults,
			'load_atts'    => $load_atts,
			'watchStart'   => $watchStart,
			'watchEnd'     => $watchEnd,
			'watchForm'    => $watchForm,
			'set_empty'    => $set_empty,
			'formats'      => $formats,
			'thing'        => $thing,
			'rinfo'        => $rowinfo,
			'debug'        => $debug,
		));

		// Grab the parsed results
		$result = $ref->getResults();

		// Create the page form
		$pageblock = '';
		$finalout = $repagements = array();

		if ($rowinfo['limit'] > 0) {
			$repagements['{'.$page_prefix.'totalrecs}'] = $rowinfo['total'];
			$repagements['{'.$page_prefix.'pagerecs}']  = $rowinfo['pagerows'];
			$repagements['{'.$page_prefix.'pages}']     = $rowinfo['numPages'];
			$repagements['{'.$page_prefix.'prevpage}']  = $rowinfo['prevpg'];
			$repagements['{'.$page_prefix.'thispage}']  = $rowinfo['pg'];
			$repagements['{'.$page_prefix.'nextpage}']  = $rowinfo['nextpg'];
			$repagements['{'.$page_prefix.'rec_start}'] = $rowinfo['first_rec'];
			$repagements['{'.$page_prefix.'rec_end}']   = $rowinfo['last_rec'];
			$repagements['{'.$page_prefix.'recs_prev}'] = $rowinfo['prev_rows'];
			$repagements['{'.$page_prefix.'recs_next}'] = $rowinfo['next_rows'];
			$repagements['{'.$page_prefix.'unique_id}'] = $rowinfo['unique_id'];
			$smd_xml_pginfo = $repagements;
			$pageblock = parse(strtr($pageform, $repagements));
		}

		// Make up the final output
		if (in_array("above", $pagebit)) {
			$finalout[] = $pageblock;
		}
		$finalout[] = doWrap($result, $wraptag, $break, $class);
		if (in_array("below", $pagebit)) {
			$finalout[] = $pageblock;
		}

		// Restore the paging outside the plugin container
		if ($limit > 0) {
			$thispage = $keepsafe;
		}

		return join('', $finalout);
	} else {
		return '';
	}
}

// Convenience tags to check if there's a prev/next page defined. Could also use smd_if
function smd_xml_if_prev($atts, $thing) {
	global $smd_xml_pginfo;

	$res = $smd_xml_pginfo && $smd_xml_pginfo['{smd_xml_prevpage}'] != '';
	return parse(EvalElse(strtr($thing, $smd_xml_pginfo), $res));
}
function smd_xml_if_next($atts, $thing) {
	global $smd_xml_pginfo;

	$res = $smd_xml_pginfo && $smd_xml_pginfo['{smd_xml_nextpage}'] != '';
	return parse(EvalElse(strtr($thing, $smd_xml_pginfo), $res));
}

/*****************
 FUNCTION LIBRARY
*****************/
// Retrieve a resource via curl; return false otherwise
function smd_xml_curl($data, $timeout=10) {
	$ret = false;

	if (function_exists('curl_version')) {
		$c = curl_init();
		curl_setopt($c, CURLOPT_URL, $data);
		curl_setopt($c, CURLOPT_REFERER, hu);
		curl_setopt($c, CURLOPT_RETURNTRANSFER, true);
		curl_setopt($c, CURLOPT_VERBOSE, false);
		curl_setopt($c, CURLOPT_TIMEOUT, $timeout);
		$ret = curl_exec($c);
	}

	return $ret;
}

// Transform an XML document using the given XSL stylesheet
function smd_xml_xsl_transform($xml, $xsl) {
	$ret = $xml;

	if (class_exists('XSLTProcessor')) {
		$xslt = new XSLTProcessor();
		$xslt->importStylesheet(new SimpleXMLElement($xsl));
		$ret = $xslt->transformToXml(new SimpleXMLElement($xml));
	}

	return $ret;
}

// Convert XML document to associative array
// (from http://stackoverflow.com/questions/99350/php-associative-arrays-to-and-from-xml)
function smd_xml_to_array($curr_node) {
	$val_array = array();
	$typ_array = array();

	foreach($curr_node->childNodes as $node) {
		if ($node->nodeType == XML_ELEMENT_NODE) {
			$val = smd_xml_to_array($node);
			if (array_key_exists($node->tagName, $val_array)) {
				if (!is_array($val_array[$node->tagName]) || $type_array[$node->tagName] == 'hash') {
					$existing_val = $val_array[$node->tagName];
					unset($val_array[$node->tagName]);
					$val_array[$node->tagName][0] = $existing_val;
					$type_array[$node->tagName] = 'array';
				}
				$val_array[$node->tagName][] = $val;
			} else {
				$val_array[$node->tagName] = $val;
				if (is_array($val)) {
					$type_array[$node->tagName] = 'hash';
				}
			} // end if array key exists
		} // end if element node
	} // end for each

	if (count($val_array) == 0) {
		return $curr_node->nodeValue;
	} else {
		return $val_array;
	}
}

// Build an XML data set from associative array
class smd_xml_build_data {
	private $xml, $last_idx, $recWrap;

	function smd_xml_build_data ($data, $startElement, $recWrap, $xml_version = '1.0', $xml_encoding = 'UTF-8') {
		$startElement = ($startElement) ? $startElement : 'fx_request';
		if (!is_array($data)) {
			$err = 'Invalid variable type supplied, expected array not found on line '.__LINE__." in Class: ".__CLASS__." Method: ".__METHOD__;
			trigger_error($err);
			return false;
		}
		$this->xml = new XmlWriter();
		$this->xml->openMemory();
		$this->xml->startDocument($xml_version, $xml_encoding);
		$this->xml->startElement($startElement);

		$this->last_idx = 0;
		$this->recWrap = $recWrap;
		$this->write($this->xml, $data, $startElement);

		$this->xml->endElement();
	}

	// Standard getter
	function getData() {
		return $this->xml->outputMemory(true);
	}

	// Recurse array elements and build XML tag tree
	function write(XMLWriter $xml, $data, $parent) {
		foreach ($data as $key => $value) {
			// Nodes that aren't valid attributes get given an array index
			if (!preg_match('/[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/', $key)) {
				$key = ($this->recWrap) ? $this->recWrap : ($parent . '_' . (is_numeric($key) ? $key : $last_idx));
			}
			if (is_array($value)) {
				$xml->startElement($key);
				$this->write($xml, $value, $key);
				$xml->endElement();
				continue;
			}
			$xml->writeElement($key, $value);
			$this->last_idx++;
		}
	}
}

// Dirty XML work done here
class smd_xml_parser {
	private $data, $rec;
	private $fields, $subfields, $treefields;
	private $skip, $match, $defaults, $set_empty;
	private $casefold, $outenc;
	private $load_atts, $watchStart, $watchEnd, $watchForm;
	private $formats, $tag_prefix, $page_prefix;

	private $intag, $indata;
	private $skiptag, $xmltag, $xmlatts, $xmldata;
	private $thing, $out;
	private $delim, $concat, $tdelim, $cdelim;
	private $rowinfo, $show_record;
	private $debug;

	/**
	* constructor
	*/
	function __construct($atts) {
		$this->data        = $atts['src'];
		$this->delim       = $atts['delim'];
		$this->tdelim      = $atts['tag_delim'];
		$this->concat      = $atts['concat'];
		$this->cdelim      = $atts['concat_delim'];
		$this->fields      = do_list($atts['fields'], $this->delim);
		$this->skip        = do_list($atts['skip'], $this->delim);
		$this->match       = $atts['match'];
		$this->rec         = $atts['record'];
		$this->casefold    = $atts['casefold'];
		$this->outenc      = $atts['target_enc'];
		$this->tag_prefix  = $atts['tag_prefix'];
		$this->page_prefix = $atts['page_prefix'];
		$this->defaults    = $atts['defaults'];
		$this->load_atts   = $atts['load_atts'];
		$this->watchStart  = $atts['watchStart'];
		$this->watchEnd    = $atts['watchEnd'];
		$this->watchForm   = $atts['watchForm'];
		$this->set_empty   = $atts['set_empty'];
		$this->formats     = $atts['formats'];
		$this->thing       = $atts['thing'];
		$this->rowinfo     = $atts['rinfo'];
		$this->debug       = $atts['debug'];

		$this->subfields  = array();
		$this->treefields = array();
		$this->tagtree    = array();
		$this->xmldata    = array();
		$this->out        = array();
		$this->intag      = false;
		$this->exists     = false;
		$this->skiptag    = '';
		$this->xmltag     = '';
		$this->xmltatts   = '';

		// Copy any tree- and sub-fields out of the list
		foreach ($this->fields as $key => $fld) {
			$sf = do_list($fld, $this->tdelim);
			$tf = do_list($sf[0], '->');
			$numSFs = count($sf);
			$numTFs = count($tf);

			// First subfield needs tree portion removing, and
			// last treefield needs removing ('cos it's the first subfield)
			$sf[0] = $tf[$numTFs-1];
			unset($tf[$numTFs-1]);
			$numTFs--;

			// Build the tree view.
			// The tree holds the path from the sub-node back to the top, so when
			// a leaf is encountered its path can be looked up as $treefields[$leaf]
			// and be path verified to see if it matches a wanted leaf
			foreach ($sf as $sub) {
				$this->treefields[$sub] = $tf;
			}

			// The subfields are built as a pair of arrays -- one flat, one indexed by parent field -- for searching later
			$this->byfields[$sf[0]] = array_slice($sf, 1);
			$this->subfields = array_merge($this->subfields, $sf);

			// Make sure the field only holds the zeroth entry
			$this->fields[$key] = ($tf) ? $tf[0] : $sf[0];

			// and make sure the root node of any tree is not added
			// as checkable to the tree itself
			$this->treefields[$this->fields[$key]] = array();
		}
		if ($this->debug > 1) {
			trace_add ('[smd_xml fields: ' . print_r($this->fields, true) . ']');
			trace_add ('[smd_xml subfields: ' . print_r($this->subfields, true) . ']');
			trace_add ('[smd_xml indexed subfields: ' . print_r($this->byfields, true) . ']');
			trace_add ('[smd_xml tree fields: ' . print_r($this->treefields, true) . ']');
		}
		$this->parse();
	}

	public function getResults() {
		if ($this->out) {
			return $this->out;
		} else {
			return '';
		}
	}

	private function parse() {
		$xmlparser = xml_parser_create();
		xml_set_object($xmlparser, $this);
		xml_parser_set_option($xmlparser, XML_OPTION_CASE_FOLDING, $this->casefold);
		xml_parser_set_option($xmlparser, XML_OPTION_TARGET_ENCODING, $this->outenc);
		xml_set_default_handler($xmlparser, "smd_xml_default");
		xml_set_element_handler($xmlparser, "smd_xml_start_tag", "smd_xml_end_tag");
		xml_set_character_data_handler($xmlparser, "smd_xml_tag_contents");
		xml_parse($xmlparser, $this->data);
		xml_parser_free($xmlparser);
	}

	// Do nothing with default (non-XML) data. Just report it in debug mode
	// TODO: allow some callback / Form to handle this type of data
	private function smd_xml_default($parser, $data) {
		if ($this->debug > 1) {
			trace_add ('[smd_xml default data: ' . print_r($data, true) . ']');
		}
	}

	// Start of XML tag
	private function smd_xml_start_tag($parser, $name, $attribs) {
		array_push($this->tagtree, $name);

		$pgval = $this->rowinfo['pgoffset'] - 1;
		$lim = $this->rowinfo['limit'] > 0;

		// Is this record to be processed? i.e. is it within this page's limit/offset?
		$this->show_record = $lim ? (($this->rowinfo['page_rowcnt'] > $pgval) && ($this->rowinfo['page_rowcnt'] <= $pgval + $this->rowinfo['pagerows'])) : $this->rowinfo['page_rowcnt'] > $pgval;

		// Check the tree if necessary
		$tree_ok = true;
		if (array_key_exists($name, $this->treefields) && !empty($this->treefields[$name])) {
			$treeSize = count($this->treefields[$name]);
			$treeOffset = '-' .$treeSize - 1;
			// If there's no difference, the tree is ok
			$tree_ok = ( array_diff ($this->treefields[$name], array_slice($this->tagtree, $treeOffset, $treeSize) ) ) ? false : true;
			if ($this->debug > 2) {
				trace_add ('[smd_xml tree check on field: ' . $name . ']');
				trace_add ('[smd_xml tree compare: ' . print_r($this->treefields[$name], true) . ']');
				trace_add ('[smd_xml tree with: ' . print_r($this->tagtree, true) . ']');
				trace_add ('[smd_xml tree result: ' . ($tree_ok ? 'YES' : 'NO') . ']');
			}
		}

		// Start of a wanted record: flag this situation and grab any attributes
		if ( ($name == $this->rec) && $this->show_record ) {
			$this->intag = true;
			$this->xmlatts[$name] = $attribs;
			if ($this->load_atts == 'start') {
				$this->smd_xml_store_attribs($name);
			}
		}

		// We're inside a wanted record
		if ($this->intag && $tree_ok) {
			if (in_array($name, $this->skip)) {
				$this->xmltag = '';
				$this->xmlatts[$name] = array();
				$this->skiptag = $name;
			} else {
				$this->xmltag = $name;
				$this->xmlatts[$name] = $attribs;
				if ( ($this->load_atts == 'start') && ($name != $this->rec) ) {
					$this->smd_xml_store_attribs($name);
				}

				// Process any ontagstart
				foreach ($this->watchStart as $frm => $watchlist) {
					if (in_array($name, $watchlist)) {
						$op = trim(parse(strtr($this->watchForm[$frm], $this->xmldata)));
						if ($op != '') {
							$this->out[] = $op;
						}
					}
				}
				if ($this->concat && isset($this->xmldata['{'.$this->tag_prefix.$this->xmltag.'}'])) {
					$this->exists = true;
				} else {
					$this->exists = false;
				}
			}
		}
		$this->indata = false;
	}

	// End of XML tag
	private function smd_xml_end_tag($parser, $name) {
		// End of a regular/attribute-only/container/self-closing tag
		if ( ($name != $this->rec) && ($name != $this->skiptag) && $this->intag && in_array($name, array_merge($this->fields, $this->subfields)) ) {
			$this->xmltag = $name;
			if ($this->load_atts == 'end') {
				$this->smd_xml_store_attribs($name);
			}

			// Process any ontagend
			foreach ($this->watchEnd as $frm => $watchlist) {
				if (in_array($name, $watchlist)) {
					$op = trim(parse(strtr($this->watchForm[$frm], $this->xmldata)));
					if ($op != '') {
						$this->out[] = $op;
					}
				}
			}
		}

		// End of the record
		if ($name == $this->rec && $name != $this->skiptag) {
			$this->intag = false;
			if ($this->load_atts == 'end') {
				$this->smd_xml_store_attribs($name);
			}

			$matched = true;
			if (array_key_exists($this->xmltag, $this->match)) {
				$matched = preg_match($this->match[$this->xmltag], $this->xmldata['{'.$this->tag_prefix.$this->xmltag.'}']);
			}
			if ($matched) {
				$lim = ($this->rowinfo['limit'] > 0) ? true : false;

				// Append row counter information
				$this->xmldata['{'.$this->page_prefix.'totalrecs}'] = $lim ? $this->rowinfo['total'] : $this->rowinfo['numrecs'] - $this->rowinfo['pgoffset'];
				$this->xmldata['{'.$this->page_prefix.'pagerecs}']  = $lim ? $this->rowinfo['pagerows'] : $this->xmldata['{'.$this->page_prefix.'totalrecs}'];
				$this->xmldata['{'.$this->page_prefix.'pages}']     = $lim ? $this->rowinfo['numPages'] : 1;
				$this->xmldata['{'.$this->page_prefix.'thispage}']  = $lim ? $this->rowinfo['pg'] : 1;
				$this->xmldata['{'.$this->page_prefix.'thisindex}'] = $this->rowinfo['page_rowcnt'] - $this->rowinfo['offset'];
				$this->xmldata['{'.$this->page_prefix.'thisrec}']   = $this->rowinfo['page_rowcnt'] - $this->rowinfo['offset'] + 1;
				$this->xmldata['{'.$this->page_prefix.'runindex}']  = $this->rowinfo['running_rowcnt'];
				$this->xmldata['{'.$this->page_prefix.'runrec}']    = $this->rowinfo['running_rowcnt'] + 1;

				$sfields = array_unique(array_merge($this->fields, $this->subfields));

				// Set any tag contents to a default value, if specified
				if ($this->defaults || $this->set_empty) {
					foreach ($sfields as $field) {
						if (!isset($this->xmldata['{'.$this->tag_prefix.$field.'}'])) {
							if (array_key_exists($field, $this->defaults)) {
								$this->xmldata['{'.$this->tag_prefix.$field.'}'] = $this->defaults[$field];
							} else if ($this->set_empty) {
								$this->xmldata['{'.$this->tag_prefix.$field.'}'] = '';
							}
						}
					}
				}

				// Reformat any fields, if specified
				if ($this->formats) {
					foreach ($sfields as $field) {
						if (isset($this->xmldata['{'.$this->tag_prefix.$field.'}']) && array_key_exists($field, $this->formats['type'])) {
							switch ($this->formats['type'][$field]) {
								case 'date':
									$nd = (is_numeric($this->xmldata['{'.$this->tag_prefix.$field.'}'])) ? $this->xmldata['{'.$this->tag_prefix.$field.'}'] : strtotime($this->xmldata['{'.$this->tag_prefix.$field.'}']);
									if ($nd !== false) {
										$this->xmldata['{'.$this->tag_prefix.$field.'}'] = strftime($this->formats['data'][$field][0], $nd);
									}
									break;
								case 'link':
									// From http://codesnippets.joyent.com/posts/show/2104
									$pat = "@\b(https?://)?(([0-9a-zA-Z_!~*'().&=+$%-]+:)?[0-9a-zA-Z_!~*'().&=+$%-]+\@)?(([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-zA-Z_!~*'()-]+\.)*([0-9a-zA-Z][0-9a-zA-Z-]{0,61})?[0-9a-zA-Z]\.[a-zA-Z]{2,6})(:[0-9]{1,4})?((/[0-9a-zA-Z_!~*'().;?:\@&=+$,%#-]+)*/?)@";
									$this->xmldata['{'.$this->tag_prefix.$field.'}'] = preg_replace($pat, '<a href="$0">$0</a>', $this->xmldata['{'.$this->tag_prefix.$field.'}']);
									break;
								case 'escape':
									$flags = ENT_XML1;
									if (isset($this->formats['data'][$field][0])) {
										switch ($this->formats['data'][$field][0]) {
											case 'no_quotes':
												$flags |= ENT_NOQUOTES;
											break;
											case 'all_quotes':
												$flags |= ENT_QUOTES;
											break;
											case 'double_quotes':
											default:
												$flags |= ENT_COMPAT;
											break;
										}
									}
									$this->xmldata['{'.$this->tag_prefix.$field.'}'] = htmlspecialchars($this->xmldata['{'.$this->tag_prefix.$field.'}'], $flags);
									break;
								case 'fordb':
									$this->xmldata['{'.$this->tag_prefix.$field.'}'] = doSlash($this->xmldata['{'.$this->tag_prefix.$field.'}']);
									break;
								case 'sanitize':
									if ($this->formats['data'][$field][0] == "url") {
										$this->xmldata['{'.$this->tag_prefix.$field.'}'] = sanitizeForUrl($this->xmldata['{'.$this->tag_prefix.$field.'}']);
									} else if ($this->formats['data'][$field][0] == "file") {
										$this->xmldata['{'.$this->tag_prefix.$field.'}'] = sanitizeForFile($this->xmldata['{'.$this->tag_prefix.$field.'}']);
									} else if ($this->formats['data'][$field][0] == "url_title") {
										$this->xmldata['{'.$this->tag_prefix.$field.'}'] = stripSpace($this->xmldata['{'.$this->tag_prefix.$field.'}'], 1);
									}
									break;
								case 'case':
									for ($idx = 0; $idx < count($this->formats['data'][$field]); $idx++) {
										if ($this->formats['data'][$field][$idx] == "upper") {
											$this->xmldata['{'.$this->tag_prefix.$field.'}'] = strtoupper($this->xmldata['{'.$this->tag_prefix.$field.'}']);
										} else if ($this->formats['data'][$field][$idx] == "lower") {
											$this->xmldata['{'.$this->tag_prefix.$field.'}'] = strtolower($this->xmldata['{'.$this->tag_prefix.$field.'}']);
										} else if ($this->formats['data'][$field][$idx] == "ucfirst") {
											$this->xmldata['{'.$this->tag_prefix.$field.'}'] = ucfirst($this->xmldata['{'.$this->tag_prefix.$field.'}']);
										} else if ($this->formats['data'][$field][$idx] == "ucwords") {
											$this->xmldata['{'.$this->tag_prefix.$field.'}'] = ucwords($this->xmldata['{'.$this->tag_prefix.$field.'}']);
										}
									}
									break;
							}
						}
					}
				}

				if ($this->debug > 0 && $this->show_record) {
					trace_add ('[smd_xml replacements for record '.($this->rowinfo['running_rowcnt'] + 1).':' . print_r($this->xmldata, true) . ']');
				}
			}

			if ($this->show_record && $matched) {
				$this->out[] = parse(strtr($this->thing, $this->xmldata));
			}

			// Prepare for next record iteration
			$this->rowinfo['running_rowcnt'] = $this->rowinfo['running_rowcnt']+1;
			$this->rowinfo['page_rowcnt'] = $this->rowinfo['page_rowcnt']+1;
			$this->xmldata = array();
			$this->indata = false;
		}
		if ($name == $this->skiptag) {
			$this->skiptag = '';
		}
		array_pop($this->tagtree);
	}

	// Node data/text that is not an XML tag
	private function smd_xml_tag_contents($parser, $data) {
		if ($this->intag && !$this->skiptag) {
			if ($this->debug > 1) {
				trace_add ('[smd_xml tag:' . $this->xmltag . ']');
				trace_add ('[smd_xml tag data:' . print_r($data, true) . ']');
			}
			if (in_array($this->xmltag, array_merge($this->fields, $this->subfields))) {
				if ($this->indata) {
					// Annoying logic, but necessary since the parser may not split at a tag
					// boundary so we need to know if we're already in some data block and append.
					// If not we can safely start a new xmldata node for this tag
					if ($this->exists) {
						$this->xmldata['{'.$this->tag_prefix.$this->xmltag.'}'] .= $this->cdelim.$data;
					} else {
						$this->xmldata['{'.$this->tag_prefix.$this->xmltag.'}'] .= $data;
					}
				} else {
					if ($this->exists) {
						$this->xmldata['{'.$this->tag_prefix.$this->xmltag.'}'] .= $this->cdelim.$data;
					} else {
						$this->xmldata['{'.$this->tag_prefix.$this->xmltag.'}'] = $data;
					}
				}

				// Copy the tag to any duplicate (alias) nodes
				if (array_key_exists($this->xmltag, $this->byfields)) {
					foreach($this->byfields[$this->xmltag] as $copyfield) {
						if (!isset($this->xmldata['{'.$this->tag_prefix.$copyfield.'}'])) {
							$this->xmldata['{'.$this->tag_prefix.$copyfield.'}'] = $this->xmldata['{'.$this->tag_prefix.$this->xmltag.'}'];
						}
					}
				}
				$this->indata = true;
			}
		}
	}

	// Create any attribute nodes
	private function smd_xml_store_attribs($name) {
		if ($this->xmlatts[$name]) {
			foreach ($this->xmlatts[$name] as $xkey => $xval) {
				// Append if attribute previously encountered
				if ($this->concat && isset($this->xmldata['{'.$this->tag_prefix.$name.$this->tdelim.$xkey.'}'])) {
					$this->xmldata['{'.$this->tag_prefix.$name.$this->tdelim.$xkey.'}'] .= $this->cdelim.$xval;
				} else {
					$this->xmldata['{'.$this->tag_prefix.$name.$this->tdelim.$xkey.'}'] = $xval;
				}
			}
		}
	}
}


/*

// JSON reader from tumblr: adapt and genericise?

$offset = $_GET['offset'];
$ch = curl_init();
curl_setopt($ch,CURLOPT_URL,"http://blog.dgovil.com/api/read/json?num=10&start=".$offset);
curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
$result = curl_exec($ch);
curl_close($ch);

$result = str_replace("var tumblr_api_read = ","",$result);
$result = str_replace(';','',$result);
$result = str_replace('\u00a0','&amp;nbsp;',$result);

$jsondata = json_decode($result,true);
$posts = $jsondata['posts'];


foreach($posts as $post){   ?>
<div class="tumblr_post post-<?php echo $post['type'] ?>">

    <?php if ($post['type'] == 'regular') { ?>
        <div class="post-title" id="post-<?php echo $post['id'];?>"><a href="<?php echo $post['url-with-slug']; ?>"><?php echo $post{'regular-title'}; ?></a></div>
    <?php echo $post{'regular-body'}; ?>
      <?php } ?>

    <?php if ($post['type'] == 'quote') {  ?>
        <?php echo $post{'quote-text'}; ?>
        <?php echo $post{'quote-source'}; ?>
      <?php } ?>


    <?php if ($post['type'] == 'photo') {  ?>
        <img src="<?php echo $post['photo-url-500'];?>">
        <?php echo $post{'photo-caption'}; ?>
        <?php echo $post{'photo-set'}; ?>

        <a href="<?php echo $post{'photo-url'}; ?>" class="fImage">View Full Size</a>
    <?php } ?>

    <?php if ($post['type'] == 'link') {  ?>

        <p><a href="<?php echo $post{'link-url'}; ?>"><?php echo $post{'link-text'}; ?></a>
        <?php echo $post{'link-description'}; ?>
      <?php } ?>

    <?php if ($post['type'] == 'conversation') {  ?>
        <?php echo $post{'conversation-text'}; ?>
      <?php } ?>


    <?php if ($post['type'] == 'video') {  ?>
        <!--<?php echo $post{'video-source'}; ?>-->
        <?php echo $post{'video-player'}; ?>
        <?php echo $post{'video-caption'}; ?>
      <?php } ?>

    <?php if ($post['type'] == 'conversation') {  ?>
        <?php echo $post{'audio-caption'}; ?>
        <?php echo $post{'audio-player'}; ?>
        <?php echo $post{'audio-plays'}; ?>
      <?php } ?>

<div id="post-date">
<?php echo date("jS D M, H:i",strtotime($post['date'])); ?>&nbsp; &nbsp;<a href="<?php echo $post['url-with-slug']; ?>">Read on Tumblr</a>
</div>

</div>

*/";s:8:"code_md5";s:32:"f89ac169bf7fa09f3ffe0222f66baad4";s:4:"type";s:1:"0";}